{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-calc\\\\src\\\\Component\\\\Table.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  quoteSummary\n}) => {\n  const formatNumber = data => {\n    return Math.round(data / 1000000 * 100) / 100;\n  }; // const generateTable = quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item,index) => {\n  // });\n\n\n  const displayTable = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.endDate.raw * 1000).getFullYear()\n            }, item.endDate.raw, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 23\n            }, this);\n          }) : \"-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E01\\u0E32\\u0E23\\u0E40\\u0E15\\u0E34\\u0E1A\\u0E42\\u0E15\\u0E02\\u0E2D\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E2D\\u0E31\\u0E15\\u0E23\\u0E32\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E14\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19 (\\u0E25\\u0E49\\u0E32\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n          let revGrowth;\n\n          if (index + 1 < (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.length)) {\n            revGrowth = `\n                      ${Math.round((item.totalRevenue.raw / (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory[index + 1].totalRevenue.raw) - 1) * 100 * 100) / 100} %`;\n          } else {\n            revGrowth = \"-\";\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: formatNumber(item.totalRevenue.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [revGrowth, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [Math.round(item.netIncome.raw / item.totalRevenue.raw * 100 * 100) / 100, \" \", \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: formatNumber(item.netIncome.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: formatNumber(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.balanceSheetHistory.balanceSheetStatements[index].commonStock.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this)]\n          }, item.endDate.raw, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this);\n        }) : \"-\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  const displayTable2 = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date().getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.endDate.raw * 1000).getFullYear()\n            }, item.endDate.raw, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this);\n          }) : \"-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", formatNumber(item.totalRevenue.raw)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 28\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E32\\u0E23\\u0E40\\u0E15\\u0E34\\u0E1A\\u0E42\\u0E15\\u0E02\\u0E2D\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n            let revGrowth;\n\n            if (index + 1 < (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.length)) {\n              revGrowth = `\n                        ${Math.round((item.totalRevenue.raw / (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory[index + 1].totalRevenue.raw) - 1) * 100 * 100) / 100} %`;\n            } else {\n              revGrowth = \"-\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", revGrowth]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 28\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E2D\\u0E31\\u0E15\\u0E23\\u0E32\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", Math.round(item.netIncome.raw / item.totalRevenue.raw * 100 * 100) / 100, \" \", \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(item.netIncome.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 28\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E14\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19 (\\u0E25\\u0E49\\u0E32\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.balanceSheetHistory.balanceSheetStatements[index].commonStock.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 23\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quoteSummary ? displayTable2 : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/src/Component/Table.js"],"names":["React","Table","quoteSummary","formatNumber","data","Math","round","displayTable","incomeStatementHistory","map","item","Date","endDate","raw","getFullYear","index","revGrowth","length","totalRevenue","netIncome","balanceSheetHistory","balanceSheetStatements","commonStock","displayTable2"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nconst Table = ({ quoteSummary }) => {\r\n  const formatNumber = (data) => {\r\n    return Math.round((data / 1000000) * 100) / 100;\r\n  };\r\n\r\n  // const generateTable = quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item,index) => {\r\n\r\n  // });\r\n\r\n  const displayTable = (\r\n    <>\r\n      <table className=\"table \">\r\n        <thead>\r\n          <tr>\r\n            <td></td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return (\r\n                      <td key={item.endDate.raw}>\r\n                        {new Date(item.endDate.raw * 1000).getFullYear()}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"-\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <td>\r\n            <tr>รายได้ (ลบ.)</tr>\r\n            <tr>การเติบโตของรายได้</tr>\r\n            <tr>อัตรากำไรสุทธิ</tr>\r\n            <tr>กำไรสุทธิ (ลบ.)</tr>\r\n            <tr>จำนวนหุ้นที่จดทะเบียน (ล้านหุ้น)</tr>\r\n          </td>\r\n          {quoteSummary\r\n            ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                (item, index) => {\r\n                  let revGrowth;\r\n                  if (\r\n                    index + 1 <\r\n                    quoteSummary?.incomeStatementHistory.incomeStatementHistory\r\n                      .length\r\n                  ) {\r\n                    revGrowth = `\r\n                      ${\r\n                        Math.round(\r\n                          (item.totalRevenue.raw /\r\n                            quoteSummary?.incomeStatementHistory\r\n                              .incomeStatementHistory[index + 1].totalRevenue\r\n                              .raw -\r\n                            1) *\r\n                            100 *\r\n                            100\r\n                        ) / 100\r\n                      } %`;\r\n                  } else {\r\n                    revGrowth = \"-\";\r\n                  }\r\n\r\n                  return (\r\n                    <td key={item.endDate.raw}>\r\n                      <tr>{formatNumber(item.totalRevenue.raw)}</tr>\r\n                      <tr>{revGrowth} </tr>\r\n                      <tr>\r\n                        {Math.round(\r\n                          (item.netIncome.raw / item.totalRevenue.raw) *\r\n                            100 *\r\n                            100\r\n                        ) / 100}{\" \"}\r\n                        %\r\n                      </tr>\r\n                      <tr>{formatNumber(item.netIncome.raw)}</tr>\r\n                      <tr>\r\n                        {formatNumber(\r\n                          quoteSummary?.balanceSheetHistory\r\n                            .balanceSheetStatements[index].commonStock.raw\r\n                        )}\r\n                      </tr>\r\n                    </td>\r\n                  );\r\n                }\r\n              )\r\n            : \"-\"}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  const displayTable2 = (\r\n    <>\r\n      <table className=\"table \">\r\n        <thead>\r\n          <tr>\r\n            <td></td>\r\n            <td>{new Date().getFullYear()}</td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return (\r\n                      <td key={item.endDate.raw}>\r\n                        {new Date(item.endDate.raw * 1000).getFullYear()}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"-\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>รายได้ (ลบ.)</td>\r\n            <td></td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return <td> {formatNumber(item.totalRevenue.raw)}</td>;\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>การเติบโตของรายได้ (%)</td>\r\n            <td></td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item, index) => {\r\n                    let revGrowth;\r\n                    if (\r\n                      index + 1 <\r\n                      quoteSummary?.incomeStatementHistory\r\n                        .incomeStatementHistory.length\r\n                    ) {\r\n                      revGrowth = `\r\n                        ${\r\n                          Math.round(\r\n                            (item.totalRevenue.raw /\r\n                              quoteSummary?.incomeStatementHistory\r\n                                .incomeStatementHistory[index + 1].totalRevenue\r\n                                .raw -\r\n                              1) *\r\n                              100 *\r\n                              100\r\n                          ) / 100\r\n                        } %`;\r\n                    } else {\r\n                      revGrowth = \"-\";\r\n                    }\r\n\r\n                    return <td> {revGrowth}</td>;\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>อัตรากำไรสุทธิ (%)</td>\r\n            <td></td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return (\r\n                      <td>\r\n                        {\" \"}\r\n                        {Math.round(\r\n                          (item.netIncome.raw / item.totalRevenue.raw) *\r\n                            100 *\r\n                            100\r\n                        ) / 100}{\" \"}\r\n                        %\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>กำไรสุทธิ (ลบ.)</td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return <td>{formatNumber(item.netIncome.raw)}</td>;\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>จำนวนหุ้นที่จดทะเบียน (ล้านหุ้น)</td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item, index) => {\r\n                    return (\r\n                      <td>\r\n                        {formatNumber(\r\n                          quoteSummary?.balanceSheetHistory\r\n                            .balanceSheetStatements[index].commonStock.raw\r\n                        )}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  return <div>{quoteSummary ? displayTable2 : \"\"}</div>;\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}