{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-valuate\\\\src\\\\Pages\\\\Crypto\\\\CryptoMarket.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { coinApi } from \"../../api/coinApi\";\nimport WeeklyChart from \"../../Elements/WeeklyChart\";\nimport { convertCurrency } from \"../../Services/Func\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoMarket = () => {\n  _s();\n\n  const [coinList, setCoinList] = useState([]);\n  const styles = {\n    change24h: price => {\n      let colorText = \"inherit\";\n\n      if (price < 0) {\n        colorText = \"red\";\n      } else if (price > 0) {\n        colorText = \"green\";\n      }\n\n      return {\n        color: colorText\n      };\n    }\n  };\n\n  const fetchCoinsMarket = () => {\n    console.log(\"fetchCoinsMarket\");\n    coinApi.get(\"/coins/markets\", {\n      params: {\n        vs_currency: \"usd\",\n        sparkline: \"true\"\n      }\n    }).then(res => {\n      console.log(res.data);\n      setCoinList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    fetchCoinsMarket();\n  }, []);\n\n  const displayTable = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table \",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"24h Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Market Cap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume(24h)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weekly chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: coinList === null || coinList === void 0 ? void 0 : coinList.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.market_cap_rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  width: \"25px\",\n                  alt: item.symbol,\n                  className: \"rounded-circle me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), item.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: convertCurrency(item.current_price)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.change24h(item.price_change_24h),\n                children: convertCurrency(item.price_change_24h)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: convertCurrency(item.market_cap)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: convertCurrency(item.total_volume)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(WeeklyChart, {\n                  data: item.sparkline_in_7d.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h1 my-2\",\n      children: \"Cryptocurrency Prices by Market Cap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoMarket, \"ZBgk+OT9Xay7tUwC9lfypgd5AyY=\");\n\n_c = CryptoMarket;\nexport default CryptoMarket;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoMarket\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-valuate/src/Pages/Crypto/CryptoMarket.js"],"names":["React","useState","useEffect","coinApi","WeeklyChart","convertCurrency","CryptoMarket","coinList","setCoinList","styles","change24h","price","colorText","color","fetchCoinsMarket","console","log","get","params","vs_currency","sparkline","then","res","data","catch","err","displayTable","map","item","index","market_cap_rank","image","symbol","name","current_price","price_change_24h","market_cap","total_volume","sparkline_in_7d"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { coinApi } from \"../../api/coinApi\";\r\nimport WeeklyChart from \"../../Elements/WeeklyChart\";\r\nimport { convertCurrency } from \"../../Services/Func\";\r\n\r\nconst CryptoMarket = () => {\r\n  const [coinList, setCoinList] = useState([]);\r\n\r\n  const styles = {\r\n    change24h: (price) => {\r\n      let colorText = \"inherit\";\r\n\r\n      if (price < 0) {\r\n        colorText = \"red\";\r\n      } else if (price > 0) {\r\n        colorText = \"green\";\r\n      }\r\n\r\n      return {\r\n        color: colorText,\r\n      };\r\n    },\r\n  };\r\n\r\n  const fetchCoinsMarket = () => {\r\n    console.log(\"fetchCoinsMarket\");\r\n    coinApi\r\n      .get(\"/coins/markets\", {\r\n        params: {\r\n          vs_currency: \"usd\",\r\n          sparkline: \"true\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCoinList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCoinsMarket();\r\n  }, []);\r\n\r\n  const displayTable = (\r\n    <div>\r\n      <div className=\"coin-table\">\r\n        <table className=\"table \">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Symbol</th>\r\n              <th>Price</th>\r\n              <th>24h Change</th>\r\n              <th>Market Cap</th>\r\n              <th>Volume(24h)</th>\r\n              <th>Weekly chart</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {coinList?.map((item, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{item.market_cap_rank}</td>\r\n                  <td>\r\n                    <img\r\n                      src={item.image}\r\n                      width=\"25px\"\r\n                      alt={item.symbol}\r\n                      className=\"rounded-circle me-2\"\r\n                    />\r\n                    {item.name}\r\n                  </td>\r\n                  <td>{item.symbol}</td>\r\n                  <td>{convertCurrency(item.current_price)}</td>\r\n                  <td style={styles.change24h(item.price_change_24h)}>\r\n                    {convertCurrency(item.price_change_24h)}\r\n                  </td>\r\n                  <td>{convertCurrency(item.market_cap)}</td>\r\n                  <td>{convertCurrency(item.total_volume)}</td>\r\n                  <td>\r\n                    <WeeklyChart data={item.sparkline_in_7d.price} />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"h1 my-2\">Cryptocurrency Prices by Market Cap</div>\r\n\r\n      <div>{displayTable}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoMarket;\r\n"]},"metadata":{},"sourceType":"module"}