{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-calc\\\\src\\\\Component\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  quoteSummary\n}) => {\n  _s();\n\n  var _quoteSummary$incomeS, _quoteSummary$incomeS2, _quoteSummary$incomeS3, _quoteSummary$incomeS4;\n\n  const [growth, setGrowth] = useState(0);\n  const [npm, setNpm] = useState(0);\n  const [totalShares, setTotalShares] = useState(0);\n  const revenue = (quoteSummary === null || quoteSummary === void 0 ? void 0 : (_quoteSummary$incomeS = quoteSummary.incomeStatementHistory) === null || _quoteSummary$incomeS === void 0 ? void 0 : (_quoteSummary$incomeS2 = _quoteSummary$incomeS.incomeStatementHistory[0]) === null || _quoteSummary$incomeS2 === void 0 ? void 0 : _quoteSummary$incomeS2.totalRevenue.raw) + (quoteSummary === null || quoteSummary === void 0 ? void 0 : (_quoteSummary$incomeS3 = quoteSummary.incomeStatementHistory) === null || _quoteSummary$incomeS3 === void 0 ? void 0 : (_quoteSummary$incomeS4 = _quoteSummary$incomeS3.incomeStatementHistory[0]) === null || _quoteSummary$incomeS4 === void 0 ? void 0 : _quoteSummary$incomeS4.totalRevenue.raw) * growth;\n\n  const formatNumber = data => {\n    return Math.round(data / 1000000 * 100) / 100;\n  };\n\n  const displayTable = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.endDate.raw * 1000).getFullYear()\n            }, item.endDate.raw, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 23\n            }, this);\n          }) : \"-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E01\\u0E32\\u0E23\\u0E40\\u0E15\\u0E34\\u0E1A\\u0E42\\u0E15\\u0E02\\u0E2D\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E2D\\u0E31\\u0E15\\u0E23\\u0E32\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E14\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19 (\\u0E25\\u0E49\\u0E32\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n          let revGrowth;\n\n          if (index + 1 < (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.length)) {\n            revGrowth = `\n                      ${Math.round((item.totalRevenue.raw / (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory[index + 1].totalRevenue.raw) - 1) * 100 * 100) / 100} %`;\n          } else {\n            revGrowth = \"-\";\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: formatNumber(item.totalRevenue.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [revGrowth, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [Math.round(item.netIncome.raw / item.totalRevenue.raw * 100 * 100) / 100, \" \", \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: formatNumber(item.netIncome.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: formatNumber(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.balanceSheetHistory.balanceSheetStatements[index].commonStock.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this)]\n          }, item.endDate.raw, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this);\n        }) : \"-\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  const displayTable2 = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date().getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.endDate.raw * 1000).getFullYear()\n            }, item.endDate.raw, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this);\n          }) : \"-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatNumber(revenue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", formatNumber(item.totalRevenue.raw)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 28\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E32\\u0E23\\u0E40\\u0E15\\u0E34\\u0E1A\\u0E42\\u0E15\\u0E02\\u0E2D\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: growth,\n              onChange: ev => setGrowth(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n            let revGrowth;\n\n            if (index + 1 < (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.length)) {\n              revGrowth = `\n                        ${Math.round((item.totalRevenue.raw / (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory[index + 1].totalRevenue.raw) - 1) * 100 * 100) / 100} %`;\n            } else {\n              revGrowth = \"-\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", revGrowth]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 28\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E2D\\u0E31\\u0E15\\u0E23\\u0E32\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: npm,\n              onChange: ev => setNpm(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", Math.round(item.netIncome.raw / item.totalRevenue.raw * 100 * 100) / 100, \" \", \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 23\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: revenue && npm ? revenue * (npm / 100) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(item.netIncome.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 28\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E14\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19 (\\u0E25\\u0E49\\u0E32\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: totalShares,\n              onChange: ev => setTotalShares(ev.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.balanceSheetHistory.balanceSheetStatements[index].commonStock.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E15\\u0E48\\u0E2D\\u0E2B\\u0E38\\u0E49\\u0E19 (\\u0E1A\\u0E32\\u0E17)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: revenue && totalShares ? revenue * (npm / 100) / totalShares : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), quoteSummary ? quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.incomeStatementHistory.incomeStatementHistory.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatNumber(+item.netIncome.raw / +(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.balanceSheetHistory.balanceSheetStatements[index].commonStock.raw))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this);\n          }) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quoteSummary ? displayTable2 : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Table, \"I11W5Wr84HF/8vfxfsCEPp9ITQ4=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/src/Component/Table.js"],"names":["React","useState","Table","quoteSummary","growth","setGrowth","npm","setNpm","totalShares","setTotalShares","revenue","incomeStatementHistory","totalRevenue","raw","formatNumber","data","Math","round","displayTable","map","item","Date","endDate","getFullYear","index","revGrowth","length","netIncome","balanceSheetHistory","balanceSheetStatements","commonStock","displayTable2","ev","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Table = ({ quoteSummary }) => {\r\n  const [growth, setGrowth] = useState(0);\r\n  const [npm, setNpm] = useState(0);\r\n  const [totalShares, setTotalShares] = useState(0);\r\n  const revenue =\r\n    quoteSummary?.incomeStatementHistory?.incomeStatementHistory[0]\r\n      ?.totalRevenue.raw +\r\n    quoteSummary?.incomeStatementHistory?.incomeStatementHistory[0]\r\n      ?.totalRevenue.raw *\r\n      growth;\r\n\r\n  const formatNumber = (data) => {\r\n    return Math.round((data / 1000000) * 100) / 100;\r\n  };\r\n\r\n  const displayTable = (\r\n    <>\r\n      <table className=\"table \">\r\n        <thead>\r\n          <tr>\r\n            <td></td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return (\r\n                      <td key={item.endDate.raw}>\r\n                        {new Date(item.endDate.raw * 1000).getFullYear()}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"-\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <td>\r\n            <tr>รายได้ (ลบ.)</tr>\r\n            <tr>การเติบโตของรายได้</tr>\r\n            <tr>อัตรากำไรสุทธิ</tr>\r\n            <tr>กำไรสุทธิ (ลบ.)</tr>\r\n            <tr>จำนวนหุ้นที่จดทะเบียน (ล้านหุ้น)</tr>\r\n          </td>\r\n          {quoteSummary\r\n            ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                (item, index) => {\r\n                  let revGrowth;\r\n                  if (\r\n                    index + 1 <\r\n                    quoteSummary?.incomeStatementHistory.incomeStatementHistory\r\n                      .length\r\n                  ) {\r\n                    revGrowth = `\r\n                      ${\r\n                        Math.round(\r\n                          (item.totalRevenue.raw /\r\n                            quoteSummary?.incomeStatementHistory\r\n                              .incomeStatementHistory[index + 1].totalRevenue\r\n                              .raw -\r\n                            1) *\r\n                            100 *\r\n                            100\r\n                        ) / 100\r\n                      } %`;\r\n                  } else {\r\n                    revGrowth = \"-\";\r\n                  }\r\n\r\n                  return (\r\n                    <td key={item.endDate.raw}>\r\n                      <tr>{formatNumber(item.totalRevenue.raw)}</tr>\r\n                      <tr>{revGrowth} </tr>\r\n                      <tr>\r\n                        {Math.round(\r\n                          (item.netIncome.raw / item.totalRevenue.raw) *\r\n                            100 *\r\n                            100\r\n                        ) / 100}{\" \"}\r\n                        %\r\n                      </tr>\r\n                      <tr>{formatNumber(item.netIncome.raw)}</tr>\r\n                      <tr>\r\n                        {formatNumber(\r\n                          quoteSummary?.balanceSheetHistory\r\n                            .balanceSheetStatements[index].commonStock.raw\r\n                        )}\r\n                      </tr>\r\n                    </td>\r\n                  );\r\n                }\r\n              )\r\n            : \"-\"}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  const displayTable2 = (\r\n    <>\r\n      <table className=\"table \">\r\n        <thead>\r\n          <tr>\r\n            <td></td>\r\n            <td>{new Date().getFullYear()}</td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return (\r\n                      <td key={item.endDate.raw}>\r\n                        {new Date(item.endDate.raw * 1000).getFullYear()}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"-\"}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>รายได้ (ลบ.)</td>\r\n            <td>{formatNumber(revenue)}</td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return <td> {formatNumber(item.totalRevenue.raw)}</td>;\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>การเติบโตของรายได้ (%)</td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                value={growth}\r\n                onChange={(ev) => setGrowth(ev.target.value)}\r\n              />\r\n            </td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item, index) => {\r\n                    let revGrowth;\r\n                    if (\r\n                      index + 1 <\r\n                      quoteSummary?.incomeStatementHistory\r\n                        .incomeStatementHistory.length\r\n                    ) {\r\n                      revGrowth = `\r\n                        ${\r\n                          Math.round(\r\n                            (item.totalRevenue.raw /\r\n                              quoteSummary?.incomeStatementHistory\r\n                                .incomeStatementHistory[index + 1].totalRevenue\r\n                                .raw -\r\n                              1) *\r\n                              100 *\r\n                              100\r\n                          ) / 100\r\n                        } %`;\r\n                    } else {\r\n                      revGrowth = \"-\";\r\n                    }\r\n\r\n                    return <td> {revGrowth}</td>;\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>อัตรากำไรสุทธิ (%)</td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                value={npm}\r\n                onChange={(ev) => setNpm(ev.target.value)}\r\n              />\r\n            </td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return (\r\n                      <td>\r\n                        {\" \"}\r\n                        {Math.round(\r\n                          (item.netIncome.raw / item.totalRevenue.raw) *\r\n                            100 *\r\n                            100\r\n                        ) / 100}{\" \"}\r\n                        %\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>กำไรสุทธิ (ลบ.)</td>\r\n            <td>{revenue && npm ? revenue * (npm / 100) : \"\"}</td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item) => {\r\n                    return <td>{formatNumber(item.netIncome.raw)}</td>;\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>จำนวนหุ้นที่จดทะเบียน (ล้านหุ้น)</td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                value={totalShares}\r\n                onChange={(ev) => setTotalShares(ev.target.value)}\r\n              />\r\n            </td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item, index) => {\r\n                    return (\r\n                      <td>\r\n                        {formatNumber(\r\n                          quoteSummary?.balanceSheetHistory\r\n                            .balanceSheetStatements[index].commonStock.raw\r\n                        )}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n          <tr>\r\n            <td>กำไรต่อหุ้น (บาท)</td>\r\n            <td>\r\n              {revenue && totalShares\r\n                ? (revenue * (npm / 100)) / totalShares\r\n                : \"\"}\r\n            </td>\r\n            {quoteSummary\r\n              ? quoteSummary?.incomeStatementHistory.incomeStatementHistory.map(\r\n                  (item, index) => {\r\n                    return (\r\n                      <td>\r\n                        {formatNumber(\r\n                          +item.netIncome.raw /\r\n                            +quoteSummary?.balanceSheetHistory\r\n                              .balanceSheetStatements[index].commonStock.raw\r\n                        )}\r\n                      </td>\r\n                    );\r\n                  }\r\n                )\r\n              : \"\"}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  return <div>{quoteSummary ? displayTable2 : \"\"}</div>;\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}