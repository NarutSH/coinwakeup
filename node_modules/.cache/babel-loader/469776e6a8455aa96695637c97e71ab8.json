{"ast":null,"code":"\"use strict\"; // Dependencies\n\nvar Typpy = require(\"typpy\");\n/**\r\n * Deffy\r\n * Computes a final value by providing the input and default values.\r\n *\r\n * @name Deffy\r\n * @function\r\n * @param {Anything} input The input value.\r\n * @param {Anything|Function} def The default value or a function getting the\r\n * input value as first argument.\r\n * @param {Object|Boolean} options The `empty` value or an object containing\r\n * the following fields:\r\n *\r\n *  - `empty` (Boolean): Handles the input value as empty field (`input || default`). Default is `false`.\r\n *\r\n * @return {Anything} The computed value.\r\n */\n\n\nfunction Deffy(input, def, options) {\n  // Default is a function\n  if (typeof def === \"function\") {\n    return def(input);\n  }\n\n  options = Typpy(options) === \"boolean\" ? {\n    empty: options\n  } : {\n    empty: false\n  }; // Handle empty\n\n  if (options.empty) {\n    return input || def;\n  } // Return input\n\n\n  if (Typpy(input) === Typpy(def)) {\n    return input;\n  } // Return the default\n\n\n  return def;\n}\n\nmodule.exports = Deffy;","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/coindy/node_modules/deffy/lib/index.js"],"names":["Typpy","require","Deffy","input","def","options","empty","module","exports"],"mappings":"AAAA,a,CAEA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,OAA3B,EAAoC;AAEhC;AACA,MAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;AAC3B,WAAOA,GAAG,CAACD,KAAD,CAAV;AACH;;AAEDE,EAAAA,OAAO,GAAGL,KAAK,CAACK,OAAD,CAAL,KAAmB,SAAnB,GAA+B;AACrCC,IAAAA,KAAK,EAAED;AAD8B,GAA/B,GAEN;AACAC,IAAAA,KAAK,EAAE;AADP,GAFJ,CAPgC,CAahC;;AACA,MAAID,OAAO,CAACC,KAAZ,EAAmB;AACf,WAAOH,KAAK,IAAIC,GAAhB;AACH,GAhB+B,CAkBhC;;;AACA,MAAIJ,KAAK,CAACG,KAAD,CAAL,KAAiBH,KAAK,CAACI,GAAD,CAA1B,EAAiC;AAC7B,WAAOD,KAAP;AACH,GArB+B,CAuBhC;;;AACA,SAAOC,GAAP;AACH;;AAEDG,MAAM,CAACC,OAAP,GAAiBN,KAAjB","sourcesContent":["\"use strict\";\r\n\r\n// Dependencies\r\nvar Typpy = require(\"typpy\");\r\n\r\n/**\r\n * Deffy\r\n * Computes a final value by providing the input and default values.\r\n *\r\n * @name Deffy\r\n * @function\r\n * @param {Anything} input The input value.\r\n * @param {Anything|Function} def The default value or a function getting the\r\n * input value as first argument.\r\n * @param {Object|Boolean} options The `empty` value or an object containing\r\n * the following fields:\r\n *\r\n *  - `empty` (Boolean): Handles the input value as empty field (`input || default`). Default is `false`.\r\n *\r\n * @return {Anything} The computed value.\r\n */\r\nfunction Deffy(input, def, options) {\r\n\r\n    // Default is a function\r\n    if (typeof def === \"function\") {\r\n        return def(input);\r\n    }\r\n\r\n    options = Typpy(options) === \"boolean\" ? {\r\n        empty: options\r\n    } : {\r\n        empty: false\r\n    };\r\n\r\n    // Handle empty\r\n    if (options.empty) {\r\n        return input || def;\r\n    }\r\n\r\n    // Return input\r\n    if (Typpy(input) === Typpy(def)) {\r\n        return input;\r\n    }\r\n\r\n    // Return the default\r\n    return def;\r\n}\r\n\r\nmodule.exports = Deffy;"]},"metadata":{},"sourceType":"script"}