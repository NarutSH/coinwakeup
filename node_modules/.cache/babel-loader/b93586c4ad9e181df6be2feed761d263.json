{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-calc\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { yahooFinApi } from \"./API/yahooFinApi\";\nimport Chart from \"./Component/Chart\";\nimport Navbar from \"./Component/Navbar\";\nimport Overview from \"./Component/Overview\";\nimport Table from \"./Component/Table\";\nimport { AiOutlineLineChart } from \"react-icons/ai\";\nimport SpinnerTool from \"./tools/Spinner/SpinnerTool\";\nimport LightChart from \"./Component/LightChart\";\nimport LightChartJs from \"./Component/LightChartJs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [quoteSummary, setQuoteSummary] = useState(\"\");\n  const [quoteSpark, setQuoteSpark] = useState(\"\");\n  const [initQuoteSpark, setInitQuoteSpark] = useState(\"\");\n  const [rangeChart, setRangeChart] = useState(\"3y\");\n  const [fairValue, setFairValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const styles = {\n    exampleImg: {\n      filter: \"blur(2px)\"\n    },\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      height: \"100%\"\n    },\n    header: {\n      flex: \"0 1 auto\"\n    },\n    chart: {\n      flex: \"1 1 auto\"\n    }\n  };\n\n  const fetchChartData = () => {\n    setIsLoading(true);\n    yahooFinApi.get(`/v8/finance/spark?interval=1d&range=${rangeChart}&symbols=${searchTerm.toLowerCase()}.BK`).then(res => {\n      const firstObj = res.data[Object.keys(res.data)[0]];\n      setQuoteSpark(firstObj);\n    }).catch(err => {\n      console.log(\"err\", err.message);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (searchTerm) fetchChartData();\n  }, [rangeChart, quoteSummary]);\n\n  const displayBlank = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center border py-5 \",\n    style: {\n      height: \"500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(AiOutlineLineChart, {\n      size: \"20em\",\n      style: {\n        color: \"rgba(0,0,0,0.5)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"rgba(0,0,0,0.5)\"\n      },\n      children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E2B\\u0E38\\u0E49\\u0E19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  const displayExample = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/assets/img/overview2.png\",\n      alt: \"overview\",\n      className: \"w-100\",\n      style: styles.exampleImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(SpinnerTool, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          setQuoteSummary: setQuoteSummary,\n          searchTerm: searchTerm,\n          setSearchTerm: setSearchTerm,\n          setIsLoading: setIsLoading,\n          setInitQuoteSpark: setInitQuoteSpark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), quoteSummary && quoteSpark ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Overview, {\n            quoteSummary: quoteSummary,\n            fairValue: fairValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LightChart, {\n            quoteSpark: quoteSpark,\n            setRangeChart: setRangeChart,\n            quoteSummary: quoteSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            quoteSummary: quoteSummary,\n            initQuoteSpark: initQuoteSpark,\n            setFairValue: setFairValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : displayExample]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"LhivQ5PMu4BmpLdfQ0NfDQIAtDQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/src/App.js"],"names":["React","useState","useEffect","yahooFinApi","Chart","Navbar","Overview","Table","AiOutlineLineChart","SpinnerTool","LightChart","LightChartJs","App","searchTerm","setSearchTerm","quoteSummary","setQuoteSummary","quoteSpark","setQuoteSpark","initQuoteSpark","setInitQuoteSpark","rangeChart","setRangeChart","fairValue","setFairValue","isLoading","setIsLoading","styles","exampleImg","filter","container","display","flexFlow","height","header","flex","chart","fetchChartData","get","toLowerCase","then","res","firstObj","data","Object","keys","catch","err","console","log","message","finally","displayBlank","color","displayExample"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { yahooFinApi } from \"./API/yahooFinApi\";\nimport Chart from \"./Component/Chart\";\nimport Navbar from \"./Component/Navbar\";\nimport Overview from \"./Component/Overview\";\nimport Table from \"./Component/Table\";\nimport { AiOutlineLineChart } from \"react-icons/ai\";\nimport SpinnerTool from \"./tools/Spinner/SpinnerTool\";\nimport LightChart from \"./Component/LightChart\";\nimport LightChartJs from \"./Component/LightChartJs\";\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [quoteSummary, setQuoteSummary] = useState(\"\");\n  const [quoteSpark, setQuoteSpark] = useState(\"\");\n  const [initQuoteSpark, setInitQuoteSpark] = useState(\"\");\n  const [rangeChart, setRangeChart] = useState(\"3y\");\n  const [fairValue, setFairValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const styles = {\n    exampleImg: {\n      filter: \"blur(2px)\",\n    },\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      height: \"100%\",\n    },\n    header: {\n      flex: \"0 1 auto\",\n    },\n    chart: {\n      flex: \"1 1 auto\",\n    },\n  };\n\n  const fetchChartData = () => {\n    setIsLoading(true);\n    yahooFinApi\n      .get(\n        `/v8/finance/spark?interval=1d&range=${rangeChart}&symbols=${searchTerm.toLowerCase()}.BK`\n      )\n      .then((res) => {\n        const firstObj = res.data[Object.keys(res.data)[0]];\n        setQuoteSpark(firstObj);\n      })\n      .catch((err) => {\n        console.log(\"err\", err.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (searchTerm) fetchChartData();\n  }, [rangeChart, quoteSummary]);\n\n  const displayBlank = (\n    <div className=\"text-center border py-5 \" style={{ height: \"500px\" }}>\n      <AiOutlineLineChart size=\"20em\" style={{ color: \"rgba(0,0,0,0.5)\" }} />\n      <h2 style={{ color: \"rgba(0,0,0,0.5)\" }}>กรุณาเลือกหุ้น</h2>\n    </div>\n  );\n\n  const displayExample = (\n    <div>\n      <img\n        src=\"/assets/img/overview2.png\"\n        alt=\"overview\"\n        className=\"w-100\"\n        style={styles.exampleImg}\n      />\n      {/* <img\n        src=\"/assets/img/table.png\"\n        alt=\"overview\"\n        className=\"w-100 mt-4\"\n        style={styles.exampleImg}\n      /> */}\n    </div>\n  );\n\n  return (\n    <div>\n      {isLoading && <SpinnerTool />}\n      <div className=\"container\">\n        <div style={styles.container}>\n          <Navbar\n            setQuoteSummary={setQuoteSummary}\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm}\n            setIsLoading={setIsLoading}\n            setInitQuoteSpark={setInitQuoteSpark}\n          />\n\n          {quoteSummary && quoteSpark ? (\n            <div>\n              <Overview quoteSummary={quoteSummary} fairValue={fairValue} />\n              <LightChart\n                quoteSpark={quoteSpark}\n                setRangeChart={setRangeChart}\n                quoteSummary={quoteSummary}\n              />\n              <Table\n                quoteSummary={quoteSummary}\n                initQuoteSpark={initQuoteSpark}\n                setFairValue={setFairValue}\n              />\n            </div>\n          ) : (\n            displayExample\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}