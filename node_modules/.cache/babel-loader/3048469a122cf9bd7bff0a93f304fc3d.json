{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\coindy\\\\src\\\\Elements\\\\WeeklyChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeeklyChart = ({\n  data\n}) => {\n  _s();\n\n  const [chartData, setChartData] = useState();\n  useEffect(() => {\n    let setColor = \"gray\"; // if (+data[0] < +data[data.length - 1]) {\n    //   setColor = \"red\";\n    // } else if (+data[0] >= +data[data.length - 1]) {\n    //   setColor = \"green\";\n    // }\n\n    const getLabels = _.range(1, 169, 1);\n\n    const genChart = {\n      labels: getLabels,\n      datasets: [{\n        label: \"\",\n        data: data,\n        borderColor: +data[0] < +data[167] ? \"green\" : \"red\",\n        borderWidth: 1,\n        pointRadius: 0\n      }]\n    };\n    setChartData(genChart);\n  }, [data]);\n  const chartOptions = {\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          display: false\n        }\n      },\n      y: {\n        grid: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          display: false\n        }\n      }\n    },\n    // aspectRatio: 1,\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly-chart-container\",\n    children: chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeeklyChart, \"LmsCyr6MQhwVasL7GTKlIjQ8Q1M=\");\n\n_c = WeeklyChart;\nexport default WeeklyChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeeklyChart\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/coindy/src/Elements/WeeklyChart.js"],"names":["React","useState","useEffect","Line","_","WeeklyChart","data","chartData","setChartData","setColor","getLabels","range","genChart","labels","datasets","label","borderColor","borderWidth","pointRadius","chartOptions","plugins","legend","display","scales","x","grid","drawBorder","ticks","y","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,GAAG,MAAf,CADc,CAGd;AACA;AACA;AACA;AACA;;AAEA,UAAMC,SAAS,GAAGN,CAAC,CAACO,KAAF,CAAQ,CAAR,EAAW,GAAX,EAAgB,CAAhB,CAAlB;;AAEA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAEH,SADO;AAEfI,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,EADT;AAEET,QAAAA,IAAI,EAAEA,IAFR;AAGEU,QAAAA,WAAW,EAAE,CAACV,IAAI,CAAC,CAAD,CAAL,GAAW,CAACA,IAAI,CAAC,GAAD,CAAhB,GAAwB,OAAxB,GAAkC,KAHjD;AAIEW,QAAAA,WAAW,EAAE,CAJf;AAKEC,QAAAA,WAAW,EAAE;AALf,OADQ;AAFK,KAAjB;AAYAV,IAAAA,YAAY,CAACI,QAAD,CAAZ;AACD,GAxBQ,EAwBN,CAACN,IAAD,CAxBM,CAAT;AA0BA,QAAMa,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AADD,KADU;AAMnBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE;AACDC,QAAAA,IAAI,EAAE;AACJH,UAAAA,OAAO,EAAE,KADL;AAEJI,UAAAA,UAAU,EAAE;AAFR,SADL;AAKDC,QAAAA,KAAK,EAAE;AACLL,UAAAA,OAAO,EAAE;AADJ;AALN,OADG;AAUNM,MAAAA,CAAC,EAAE;AACDH,QAAAA,IAAI,EAAE;AACJH,UAAAA,OAAO,EAAE,KADL;AAEJI,UAAAA,UAAU,EAAE;AAFR,SADL;AAKDC,QAAAA,KAAK,EAAE;AACLL,UAAAA,OAAO,EAAE;AADJ;AALN;AAVG,KANW;AA0BnB;AACAO,IAAAA,mBAAmB,EAAE;AA3BF,GAArB;AA8BA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cACGtB,SAAS,gBAAG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,SAAZ;AAAuB,MAAA,OAAO,EAAEY;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsD;AADlE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhED;;GAAMd,W;;KAAAA,W;AAkEN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport _ from \"lodash\";\r\n\r\nconst WeeklyChart = ({ data }) => {\r\n  const [chartData, setChartData] = useState();\r\n\r\n  useEffect(() => {\r\n    let setColor = \"gray\";\r\n\r\n    // if (+data[0] < +data[data.length - 1]) {\r\n    //   setColor = \"red\";\r\n    // } else if (+data[0] >= +data[data.length - 1]) {\r\n    //   setColor = \"green\";\r\n    // }\r\n\r\n    const getLabels = _.range(1, 169, 1);\r\n\r\n    const genChart = {\r\n      labels: getLabels,\r\n      datasets: [\r\n        {\r\n          label: \"\",\r\n          data: data,\r\n          borderColor: +data[0] < +data[167] ? \"green\" : \"red\",\r\n          borderWidth: 1,\r\n          pointRadius: 0,\r\n        },\r\n      ],\r\n    };\r\n    setChartData(genChart);\r\n  }, [data]);\r\n\r\n  const chartOptions = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        grid: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n    // aspectRatio: 1,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\"weekly-chart-container\">\r\n      {chartData ? <Line data={chartData} options={chartOptions} /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyChart;\r\n"]},"metadata":{},"sourceType":"module"}