{"ast":null,"code":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar typpy = require(\"typpy\"),\n    iterateObject = require(\"iterate-object\"),\n    barbe = require(\"barbe\");\n/**\r\n * Err\r\n * Create a custom error object.\r\n *\r\n * @name Err\r\n * @function\r\n * @param {String|Error|Object} error The error message or an existing `Error`\r\n * instance or the `data` object where the `message` is the error message.\r\n * @param {String|Object} code The error code or the data object.\r\n * @param {Object} data The data object (its fields will be appended to the\r\n * `Error` object).\r\n * @return {Error} The custom `Error` instance.\r\n */\n\n\nmodule.exports = function (_Error) {\n  _inherits(Err, _Error);\n\n  function Err(error, code, data) {\n    _classCallCheck(this, Err); // Err({ message: \"...\", code: \"...\", ... });\n\n\n    if (typpy(error, Object)) {\n      data = error;\n      error = data.message;\n      delete data.message;\n      code = data.code;\n    } // Err(message, code, data);\n    // Err(message, data);\n\n\n    if (typpy(data, Object)) {\n      data.code = code;\n    } else if (typpy(code, Object)) {\n      data = code;\n      code = undefined;\n    } else if (!typpy(code, undefined)) {\n      data = {\n        code: code\n      };\n    }\n\n    if (typeof error === \"string\") {\n      error = barbe(error, [\"<\", \">\"], data);\n    } // Create the error\n\n\n    var _this = _possibleConstructorReturn(this, (Err.__proto__ || Object.getPrototypeOf(Err)).call(this, error));\n\n    if (data) {\n      iterateObject(data, function (v, n) {\n        _this[n] = v;\n      });\n    }\n\n    return _this;\n  }\n\n  return Err;\n}(Error);","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/coindy/node_modules/err/lib/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","typpy","require","iterateObject","barbe","module","exports","_Error","Err","error","code","data","message","undefined","_this","getPrototypeOf","v","n","Error"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar typpy = require(\"typpy\"),\r\n    iterateObject = require(\"iterate-object\"),\r\n    barbe = require(\"barbe\");\r\n\r\n/**\r\n * Err\r\n * Create a custom error object.\r\n *\r\n * @name Err\r\n * @function\r\n * @param {String|Error|Object} error The error message or an existing `Error`\r\n * instance or the `data` object where the `message` is the error message.\r\n * @param {String|Object} code The error code or the data object.\r\n * @param {Object} data The data object (its fields will be appended to the\r\n * `Error` object).\r\n * @return {Error} The custom `Error` instance.\r\n */\r\nmodule.exports = function (_Error) {\r\n    _inherits(Err, _Error);\r\n\r\n    function Err(error, code, data) {\r\n        _classCallCheck(this, Err);\r\n\r\n        // Err({ message: \"...\", code: \"...\", ... });\r\n        if (typpy(error, Object)) {\r\n            data = error;\r\n            error = data.message;\r\n            delete data.message;\r\n            code = data.code;\r\n        }\r\n\r\n        // Err(message, code, data);\r\n        // Err(message, data);\r\n        if (typpy(data, Object)) {\r\n            data.code = code;\r\n        } else if (typpy(code, Object)) {\r\n            data = code;\r\n            code = undefined;\r\n        } else if (!typpy(code, undefined)) {\r\n            data = { code: code };\r\n        }\r\n\r\n        if (typeof error === \"string\") {\r\n            error = barbe(error, [\"<\", \">\"], data);\r\n        }\r\n\r\n        // Create the error\r\n\r\n        var _this = _possibleConstructorReturn(this, (Err.__proto__ || Object.getPrototypeOf(Err)).call(this, error));\r\n\r\n        if (data) {\r\n            iterateObject(data, function (v, n) {\r\n                _this[n] = v;\r\n            });\r\n        }\r\n        return _this;\r\n    }\r\n\r\n    return Err;\r\n}(Error);"]},"metadata":{},"sourceType":"script"}