{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-calc\\\\src\\\\Component\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport scrapeIt from \"scrape-it\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst News = () => {\n  _s();\n\n  useEffect(() => {\n    scrapeIt(\"https://news.ycombinator.com\", {\n      // title: \" h3\",\n      // desc: \".header h2\",\n      // avatar: {\n      //   selector: \".header img\",\n      //   attr: \"src\",\n      // },\n      listItem: \".athing\",\n      data: {\n        title: \".storylink\",\n        href: {\n          selector: \".storylink\",\n          attr: \"href\"\n        }\n      } // articles: {\n      //   listItem: \".article\",\n      //   data: {\n      //     // Get the article date and convert it into a Date object\n      //     createdAt: {\n      //       selector: \".date\",\n      //       convert: (x) => new Date(x),\n      //     },\n      //     // Get the title\n      //     title: \"a.article-title\",\n      //     // Nested list\n      //     tags: {\n      //       listItem: \".tags > span\",\n      //     },\n      //     // Get the content\n      //     content: {\n      //       selector: \".article-content\",\n      //       how: \"html\",\n      //     },\n      //     // Get attribute value of root listItem by omitting the selector\n      //     classes: {\n      //       attr: \"class\",\n      //     },\n      //   },\n      // },\n\n    }).then(({\n      data,\n      response\n    }) => {\n      console.log(`Status Code: ${response.statusCode}`);\n      console.log(data);\n    }).catch(err => console.log(\"err\", err));\n    console.log(\"useefffec\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_s(News, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/src/Component/News.js"],"names":["React","useEffect","scrapeIt","News","listItem","data","title","href","selector","attr","then","response","console","log","statusCode","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjBF,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CAAC,8BAAD,EAAiC;AACvC;AACA;AACA;AACA;AACA;AACA;AAEAE,MAAAA,QAAQ,EAAE,SAR6B;AASvCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,YADH;AAEJC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE,YAAZ;AAA0BC,UAAAA,IAAI,EAAE;AAAhC;AAFF,OATiC,CAcvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AA1CuC,KAAjC,CAAR,CA4CGC,IA5CH,CA4CQ,CAAC;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,KAAD,KAAwB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,QAAQ,CAACG,UAAW,EAAhD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,KA/CH,EAgDGU,KAhDH,CAgDUC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB,CAhDlB;AAiDAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAnDQ,EAmDN,EAnDM,CAAT;AAqDA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvDD;;GAAMV,I;;KAAAA,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport scrapeIt from \"scrape-it\";\r\n\r\nconst News = () => {\r\n  useEffect(() => {\r\n    scrapeIt(\"https://news.ycombinator.com\", {\r\n      // title: \" h3\",\r\n      // desc: \".header h2\",\r\n      // avatar: {\r\n      //   selector: \".header img\",\r\n      //   attr: \"src\",\r\n      // },\r\n\r\n      listItem: \".athing\",\r\n      data: {\r\n        title: \".storylink\",\r\n        href: { selector: \".storylink\", attr: \"href\" },\r\n      },\r\n\r\n      // articles: {\r\n      //   listItem: \".article\",\r\n      //   data: {\r\n      //     // Get the article date and convert it into a Date object\r\n      //     createdAt: {\r\n      //       selector: \".date\",\r\n      //       convert: (x) => new Date(x),\r\n      //     },\r\n\r\n      //     // Get the title\r\n      //     title: \"a.article-title\",\r\n\r\n      //     // Nested list\r\n      //     tags: {\r\n      //       listItem: \".tags > span\",\r\n      //     },\r\n\r\n      //     // Get the content\r\n      //     content: {\r\n      //       selector: \".article-content\",\r\n      //       how: \"html\",\r\n      //     },\r\n\r\n      //     // Get attribute value of root listItem by omitting the selector\r\n      //     classes: {\r\n      //       attr: \"class\",\r\n      //     },\r\n      //   },\r\n      // },\r\n    })\r\n      .then(({ data, response }) => {\r\n        console.log(`Status Code: ${response.statusCode}`);\r\n        console.log(data);\r\n      })\r\n      .catch((err) => console.log(\"err\", err));\r\n    console.log(\"useefffec\");\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default News;\r\n"]},"metadata":{},"sourceType":"module"}