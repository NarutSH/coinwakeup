{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/narut/Documents/Coding/coindy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/narut/Documents/Coding/coindy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Mixin = /*#__PURE__*/function () {\n  function Mixin(host) {\n    _classCallCheck(this, Mixin);\n\n    var originalMethods = {};\n\n    var overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n    for (var _i = 0, _Object$keys = Object.keys(overriddenMethods); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n\n      if (typeof overriddenMethods[key] === 'function') {\n        originalMethods[key] = host[key];\n        host[key] = overriddenMethods[key];\n      }\n    }\n  }\n\n  _createClass(Mixin, [{\n    key: \"_getOverriddenMethods\",\n    value: function _getOverriddenMethods() {\n      throw new Error('Not implemented');\n    }\n  }]);\n\n  return Mixin;\n}();\n\nMixin.install = function (host, Ctor, opts) {\n  if (!host.__mixins) {\n    host.__mixins = [];\n  }\n\n  for (var i = 0; i < host.__mixins.length; i++) {\n    if (host.__mixins[i].constructor === Ctor) {\n      return host.__mixins[i];\n    }\n  }\n\n  var mixin = new Ctor(host, opts);\n\n  host.__mixins.push(mixin);\n\n  return mixin;\n};\n\nmodule.exports = Mixin;","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/coindy/node_modules/parse5/lib/utils/mixin.js"],"names":["Mixin","host","originalMethods","overriddenMethods","_getOverriddenMethods","Object","keys","key","Error","install","Ctor","opts","__mixins","i","length","constructor","mixin","push","module","exports"],"mappings":"AAAA;;;;;;IAEMA,K;AACF,iBAAYC,IAAZ,EAAkB;AAAA;;AACd,QAAMC,eAAe,GAAG,EAAxB;;AACA,QAAMC,iBAAiB,GAAG,KAAKC,qBAAL,CAA2B,IAA3B,EAAiCF,eAAjC,CAA1B;;AAEA,oCAAkBG,MAAM,CAACC,IAAP,CAAYH,iBAAZ,CAAlB,kCAAkD;AAA7C,UAAMI,GAAG,mBAAT;;AACD,UAAI,OAAOJ,iBAAiB,CAACI,GAAD,CAAxB,KAAkC,UAAtC,EAAkD;AAC9CL,QAAAA,eAAe,CAACK,GAAD,CAAf,GAAuBN,IAAI,CAACM,GAAD,CAA3B;AACAN,QAAAA,IAAI,CAACM,GAAD,CAAJ,GAAYJ,iBAAiB,CAACI,GAAD,CAA7B;AACH;AACJ;AACJ;;;;WAED,iCAAwB;AACpB,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;;;;;AAGLR,KAAK,CAACS,OAAN,GAAgB,UAASR,IAAT,EAAeS,IAAf,EAAqBC,IAArB,EAA2B;AACvC,MAAI,CAACV,IAAI,CAACW,QAAV,EAAoB;AAChBX,IAAAA,IAAI,CAACW,QAAL,GAAgB,EAAhB;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACW,QAAL,CAAcE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,QAAIZ,IAAI,CAACW,QAAL,CAAcC,CAAd,EAAiBE,WAAjB,KAAiCL,IAArC,EAA2C;AACvC,aAAOT,IAAI,CAACW,QAAL,CAAcC,CAAd,CAAP;AACH;AACJ;;AAED,MAAMG,KAAK,GAAG,IAAIN,IAAJ,CAAST,IAAT,EAAeU,IAAf,CAAd;;AAEAV,EAAAA,IAAI,CAACW,QAAL,CAAcK,IAAd,CAAmBD,KAAnB;;AAEA,SAAOA,KAAP;AACH,CAhBD;;AAkBAE,MAAM,CAACC,OAAP,GAAiBnB,KAAjB","sourcesContent":["'use strict';\r\n\r\nclass Mixin {\r\n    constructor(host) {\r\n        const originalMethods = {};\r\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\r\n\r\n        for (const key of Object.keys(overriddenMethods)) {\r\n            if (typeof overriddenMethods[key] === 'function') {\r\n                originalMethods[key] = host[key];\r\n                host[key] = overriddenMethods[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    _getOverriddenMethods() {\r\n        throw new Error('Not implemented');\r\n    }\r\n}\r\n\r\nMixin.install = function(host, Ctor, opts) {\r\n    if (!host.__mixins) {\r\n        host.__mixins = [];\r\n    }\r\n\r\n    for (let i = 0; i < host.__mixins.length; i++) {\r\n        if (host.__mixins[i].constructor === Ctor) {\r\n            return host.__mixins[i];\r\n        }\r\n    }\r\n\r\n    const mixin = new Ctor(host, opts);\r\n\r\n    host.__mixins.push(mixin);\r\n\r\n    return mixin;\r\n};\r\n\r\nmodule.exports = Mixin;\r\n"]},"metadata":{},"sourceType":"script"}