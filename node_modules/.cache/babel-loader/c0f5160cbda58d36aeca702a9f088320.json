{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/narut/Documents/Coding/stock-calc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:/Users/narut/Documents/Coding/stock-calc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/narut/Documents/Coding/stock-calc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/narut/Documents/Coding/stock-calc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/narut/Documents/Coding/stock-calc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/narut/Documents/Coding/stock-calc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*!\n* chartjs-plugin-annotation v1.0.2\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2021 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, Chart, defaults, Animations } from 'chart.js';\nimport { distanceBetweenPoints, callback, isFinite, toFontString, isArray, toRadians, isObject, clipArea, unclipArea, valueOrDefault } from 'chart.js/helpers';\nvar clickHooks = ['click', 'dblclick'];\nvar moveHooks = ['enter', 'leave'];\nvar hooks = clickHooks.concat(moveHooks);\n\nfunction updateListeners(chart, state, options) {\n  var annotations = state.annotations || [];\n  state.listened = false;\n  state.moveListened = false;\n  hooks.forEach(function (hook) {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    }\n  });\n  moveHooks.forEach(function (hook) {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    annotations.forEach(function (scope) {\n      if (!state.listened) {\n        clickHooks.forEach(function (hook) {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n\n      if (!state.moveListened) {\n        moveHooks.forEach(function (hook) {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction handleEvent(chart, state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, state, event);\n        break;\n\n      case 'click':\n        handleClickEvents(chart, state, event, options);\n        break;\n    }\n  }\n}\n\nfunction handleMoveEvents(chart, state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  var element;\n\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n\n  var previous = state.hovered;\n  state.hovered = element;\n  dispatchMoveEvents(chart, state, previous, element);\n}\n\nfunction dispatchMoveEvents(chart, state, previous, element) {\n  if (previous && previous !== element) {\n    dispatchEvent(chart, state, previous.options.leave || state.listeners.leave, previous);\n  }\n\n  if (element && element !== previous) {\n    dispatchEvent(chart, state, element.options.enter || state.listeners.enter, element);\n  }\n}\n\nfunction handleClickEvents(chart, state, event, options) {\n  var listeners = state.listeners;\n  var element = getNearestItem(state.elements, event);\n\n  if (element) {\n    var elOpts = element.options;\n    var dblclick = elOpts.dblclick || listeners.dblclick;\n    var click = elOpts.click || listeners.click;\n\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(chart, state, dblclick, element);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(function () {\n        delete element.clickTimeout;\n        dispatchEvent(chart, state, click, element);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(chart, state, click, element);\n    }\n  }\n}\n\nfunction dispatchEvent(chart, _state, handler, element) {\n  callback(handler, [{\n    chart: chart,\n    element: element\n  }]);\n}\n\nfunction getNearestItem(elements, position) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  return elements.filter(function (element) {\n    return element.options.display && element.inRange(position.x, position.y);\n  }).reduce(function (nearestItems, element) {\n    var center = element.getCenterPoint();\n    var distance = distanceBetweenPoints(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n\n    return nearestItems;\n  }, []).sort(function (a, b) {\n    return a._index - b._index;\n  }).slice(0, 1)[0]; // return only the top item\n}\n\nvar PI$1 = Math.PI;\nvar HALF_PI = PI$1 / 2;\n\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n/**\n * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n * given size (width, height) and the same `radius` for all corners.\n * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n * @param {number} width - The rectangle's width.\n * @param {number} height - The rectangle's height.\n * @param {number} radius - The rounded amount (in pixels) for the four corners.\n * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n */\n\n\nfunction roundedRect(ctx, x, y, width, height, radius) {\n  ctx.beginPath();\n\n  if (radius) {\n    var r = Math.min(radius, height / 2, width / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + width - r;\n    var bottom = y + height - r;\n    ctx.moveTo(x, top);\n\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -PI$1, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, PI$1);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, PI$1 + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -PI$1, 0);\n      ctx.arc(left, bottom, r, 0, PI$1);\n    } else {\n      ctx.arc(left, top, r, -PI$1, PI$1);\n    }\n\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, width, height);\n  }\n}\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {{x: number, y: number}} point - the point to rotate\n * @param {{x: number, y: number}} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {{x: number, y: number}} rotated point\n */\n\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nvar BoxAnnotation = /*#__PURE__*/function (_Element) {\n  _inherits(BoxAnnotation, _Element);\n\n  var _super = _createSuper(BoxAnnotation);\n\n  function BoxAnnotation() {\n    _classCallCheck(this, BoxAnnotation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BoxAnnotation, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y,\n          width = _this$getProps.width,\n          height = _this$getProps.height;\n\n      return mouseX >= x && mouseX <= x + width && mouseY >= y && mouseY <= y + height;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps2 = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition),\n          x = _this$getProps2.x,\n          y = _this$getProps2.y,\n          width = _this$getProps2.width,\n          height = _this$getProps2.height;\n\n      return {\n        x: x + width / 2,\n        y: y + height / 2\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var x = this.x,\n          y = this.y,\n          width = this.width,\n          height = this.height,\n          options = this.options;\n      ctx.save();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n      roundedRect(ctx, x, y, width, height, options.cornerRadius);\n      ctx.fill(); // If no border, don't draw it\n\n      if (options.borderWidth) {\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }, {\n    key: \"resolveElementProperties\",\n    value: function resolveElementProperties(chart, options) {\n      var xScale = chart.scales[options.xScaleID];\n      var yScale = chart.scales[options.yScaleID];\n      var _chart$chartArea = chart.chartArea,\n          y = _chart$chartArea.top,\n          x = _chart$chartArea.left,\n          y2 = _chart$chartArea.bottom,\n          x2 = _chart$chartArea.right;\n      var min, max;\n\n      if (!xScale && !yScale) {\n        return {\n          options: {}\n        };\n      }\n\n      if (xScale) {\n        min = scaleValue(xScale, options.xMin, x);\n        max = scaleValue(xScale, options.xMax, x2);\n        x = Math.min(min, max);\n        x2 = Math.max(min, max);\n      }\n\n      if (yScale) {\n        min = scaleValue(yScale, options.yMin, y2);\n        max = scaleValue(yScale, options.yMax, y);\n        y = Math.min(min, max);\n        y2 = Math.max(min, max);\n      }\n\n      return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: x2 - x,\n        height: y2 - y\n      };\n    }\n  }]);\n\n  return BoxAnnotation;\n}(Element);\n\nBoxAnnotation.id = 'boxAnnotation';\nBoxAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  cornerRadius: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nvar PI = Math.PI;\n\nvar clamp = function clamp(x, from, to) {\n  return Math.min(to, Math.max(from, x));\n};\n\nvar pointInLine = function pointInLine(p1, p2, t) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n};\n\nvar interpolateX = function interpolateX(y, p1, p2) {\n  return pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\n};\n\nvar interpolateY = function interpolateY(x, p1, p2) {\n  return pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\n};\n\nvar toPercent = function toPercent(s) {\n  return typeof s === 'string' && s.endsWith('%') && parseFloat(s) / 100;\n};\n\nfunction limitPointToArea(_ref, p2, _ref2) {\n  var x = _ref.x,\n      y = _ref.y;\n  var top = _ref2.top,\n      right = _ref2.right,\n      bottom = _ref2.bottom,\n      left = _ref2.left;\n\n  if (x < left) {\n    y = p2.x < left ? NaN : interpolateY(left, {\n      x: x,\n      y: y\n    }, p2);\n    x = left;\n  }\n\n  if (x > right) {\n    y = p2.x > right ? NaN : interpolateY(right, {\n      x: x,\n      y: y\n    }, p2);\n    x = right;\n  }\n\n  if (y < top) {\n    x = p2.y < top ? NaN : interpolateX(top, {\n      x: x,\n      y: y\n    }, p2);\n    y = top;\n  }\n\n  if (y > bottom) {\n    x = p2.y > bottom ? NaN : interpolateX(bottom, {\n      x: x,\n      y: y\n    }, p2);\n    y = bottom;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  var _limitPointToArea = limitPointToArea(p1, p2, area),\n      x = _limitPointToArea.x,\n      y = _limitPointToArea.y;\n\n  var _limitPointToArea2 = limitPointToArea(p2, p1, area),\n      x2 = _limitPointToArea2.x,\n      y2 = _limitPointToArea2.y;\n\n  return {\n    x: x,\n    y: y,\n    x2: x2,\n    y2: y2,\n    width: Math.abs(x2 - x),\n    height: Math.abs(y2 - y)\n  };\n}\n\nvar LineAnnotation = /*#__PURE__*/function (_Element2) {\n  _inherits(LineAnnotation, _Element2);\n\n  var _super2 = _createSuper(LineAnnotation);\n\n  function LineAnnotation() {\n    _classCallCheck(this, LineAnnotation);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(LineAnnotation, [{\n    key: \"intersects\",\n    value: function intersects(x, y) {\n      var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.001;\n\n      // Adapted from https://stackoverflow.com/a/6853926/25507\n      var sqr = function sqr(v) {\n        return v * v;\n      };\n\n      var x1 = this.x,\n          y1 = this.y,\n          x2 = this.x2,\n          y2 = this.y2;\n      var dx = x2 - x1;\n      var dy = y2 - y1;\n      var lenSq = sqr(dx) + sqr(dy);\n      var t = lenSq === 0 ? -1 : ((x - x1) * dx + (y - y1) * dy) / lenSq;\n      var xx, yy;\n\n      if (t < 0) {\n        xx = x1;\n        yy = y1;\n      } else if (t > 1) {\n        xx = x2;\n        yy = y2;\n      } else {\n        xx = x1 + t * dx;\n        yy = y1 + t * dy;\n      }\n\n      return sqr(x - xx) + sqr(y - yy) < epsilon;\n    }\n  }, {\n    key: \"labelIsVisible\",\n    value: function labelIsVisible() {\n      var label = this.options.label;\n      return label && label.enabled && label.content;\n    }\n  }, {\n    key: \"isOnLabel\",\n    value: function isOnLabel(mouseX, mouseY) {\n      var labelRect = this.labelRect;\n\n      if (!labelRect || !this.labelIsVisible()) {\n        return false;\n      }\n\n      var _rotated = rotated({\n        x: mouseX,\n        y: mouseY\n      }, labelRect, -labelRect.rotation),\n          x = _rotated.x,\n          y = _rotated.y;\n\n      var w2 = labelRect.width / 2;\n      var h2 = labelRect.height / 2;\n      return x >= labelRect.x - w2 && x <= labelRect.x + w2 && y >= labelRect.y - h2 && y <= labelRect.y + h2;\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(x, y) {\n      var epsilon = this.options.borderWidth || 1;\n      return this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint() {\n      return {\n        x: (this.x2 + this.x) / 2,\n        y: (this.y2 + this.y) / 2\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var x = this.x,\n          y = this.y,\n          x2 = this.x2,\n          y2 = this.y2,\n          options = this.options;\n      ctx.save();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset; // Draw\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabel\",\n    value: function drawLabel(ctx, chartArea) {\n      if (this.labelIsVisible()) {\n        ctx.save();\n\n        _drawLabel(ctx, this, chartArea);\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"resolveElementProperties\",\n    value: function resolveElementProperties(chart, options) {\n      var scale = chart.scales[options.scaleID];\n      var _chart$chartArea2 = chart.chartArea,\n          y = _chart$chartArea2.top,\n          x = _chart$chartArea2.left,\n          y2 = _chart$chartArea2.bottom,\n          x2 = _chart$chartArea2.right;\n      var min, max;\n\n      if (scale) {\n        min = scaleValue(scale, options.value, NaN);\n        max = scaleValue(scale, options.endValue, min);\n\n        if (scale.isHorizontal()) {\n          x = min;\n          x2 = max;\n        } else {\n          y = min;\n          y2 = max;\n        }\n      } else {\n        var xScale = chart.scales[options.xScaleID];\n        var yScale = chart.scales[options.yScaleID];\n\n        if (xScale) {\n          x = scaleValue(xScale, options.xMin, x);\n          x2 = scaleValue(xScale, options.xMax, x2);\n        }\n\n        if (yScale) {\n          y = scaleValue(yScale, options.yMin, y);\n          y2 = scaleValue(yScale, options.yMax, y2);\n        }\n      }\n\n      return limitLineToArea({\n        x: x,\n        y: y\n      }, {\n        x: x2,\n        y: y2\n      }, chart.chartArea);\n    }\n  }]);\n\n  return LineAnnotation;\n}(Element);\n\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderWidth: 2,\n  borderDash: [],\n  borderDashOffset: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: 'bold',\n      weight: undefined\n    },\n    color: '#fff',\n    xPadding: 6,\n    yPadding: 6,\n    rotation: 0,\n    cornerRadius: 6,\n    position: 'center',\n    xAdjust: 0,\n    yAdjust: 0,\n    textAlign: 'center',\n    enabled: false,\n    content: null\n  },\n  value: undefined,\n  endValue: undefined,\n  scaleID: undefined,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction calculateAutoRotation(line) {\n  var x = line.x,\n      y = line.y,\n      x2 = line.x2,\n      y2 = line.y2;\n  var rotation = Math.atan2(y2 - y, x2 - x); // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction _drawLabel(ctx, line, chartArea) {\n  var label = line.options.label;\n  ctx.font = toFontString(label.font);\n\n  var _measureLabel = measureLabel(ctx, label),\n      width = _measureLabel.width,\n      height = _measureLabel.height;\n\n  var rect = line.labelRect = calculateLabelPosition(line, width, height, chartArea);\n  ctx.translate(rect.x, rect.y);\n  ctx.rotate(rect.rotation);\n  ctx.fillStyle = label.backgroundColor;\n  roundedRect(ctx, -(width / 2), -(height / 2), width, height, label.cornerRadius);\n  ctx.fill();\n  ctx.fillStyle = label.color;\n\n  if (isArray(label.content)) {\n    ctx.textAlign = label.textAlign;\n    var x = calculateLabelXAlignment(label, width);\n    var textYPosition = -(height / 2) + label.yPadding;\n\n    for (var i = 0; i < label.content.length; i++) {\n      ctx.textBaseline = 'top';\n      ctx.fillText(label.content[i], x, textYPosition);\n      textYPosition += label.font.size + label.yPadding;\n    }\n  } else if (label.content instanceof Image) {\n    var _x = -(width / 2) + label.xPadding;\n\n    var y = -(height / 2) + label.yPadding;\n    ctx.drawImage(label.content, _x, y, width - 2 * label.xPadding, height - 2 * label.yPadding);\n  } else {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(label.content, 0, 0);\n  }\n}\n\nfunction calculateLabelXAlignment(label, width) {\n  var textAlign = label.textAlign,\n      xPadding = label.xPadding;\n\n  if (textAlign === 'start') {\n    return -(width / 2) + xPadding;\n  } else if (textAlign === 'end') {\n    return +(width / 2) - xPadding;\n  }\n\n  return 0;\n}\n\nfunction getImageSize(size, value) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return toPercent(value) * size;\n  }\n\n  return size;\n}\n\nvar widthCache = new Map();\n\nfunction measureLabel(ctx, label) {\n  var content = label.content;\n\n  if (content instanceof Image) {\n    return {\n      width: getImageSize(content.width, label.width) + 2 * label.xPadding,\n      height: getImageSize(content.height, label.height) + 2 * label.yPadding\n    };\n  }\n\n  var lines = isArray(content) ? content : [content];\n  var count = lines.length;\n  var width = 0;\n\n  for (var i = 0; i < count; i++) {\n    var text = lines[i];\n\n    if (!widthCache.has(text)) {\n      widthCache.set(text, ctx.measureText(text).width);\n    }\n\n    width = Math.max(width, widthCache.get(text));\n  }\n\n  width += 2 * label.xPadding;\n  return {\n    width: width,\n    height: count * label.font.size + (count + 1) * label.yPadding\n  };\n}\n\nfunction calculateLabelPosition(line, width, height, chartArea) {\n  var label = line.options.label;\n  var xAdjust = label.xAdjust,\n      yAdjust = label.yAdjust,\n      xPadding = label.xPadding,\n      yPadding = label.yPadding,\n      position = label.position;\n  var p1 = {\n    x: line.x,\n    y: line.y\n  };\n  var p2 = {\n    x: line.x2,\n    y: line.y2\n  };\n  var rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  var size = rotatedSize(width, height, rotation);\n  var t = calculateT(line, position, size, chartArea);\n  var pt = pointInLine(p1, p2, t);\n  var xCoordinateSizes = {\n    size: size.w,\n    min: chartArea.left,\n    max: chartArea.right,\n    padding: xPadding\n  };\n  var yCoordinateSizes = {\n    size: size.h,\n    min: chartArea.top,\n    max: chartArea.bottom,\n    padding: yPadding\n  };\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width: width,\n    height: height,\n    rotation: rotation\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  var cos = Math.cos(rotation);\n  var sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(line, position, rotSize, chartArea) {\n  var t = 0.5;\n  var space = spaceAround(line, chartArea);\n  var label = line.options.label;\n\n  if (position === 'start') {\n    t = calculateTAdjust({\n      w: line.x2 - line.x,\n      h: line.y2 - line.y\n    }, rotSize, label, space);\n  } else if (position === 'end') {\n    t = 1 - calculateTAdjust({\n      w: line.x - line.x2,\n      h: line.y - line.y2\n    }, rotSize, label, space);\n  }\n\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, labelSize, label, space) {\n  var xPadding = label.xPadding,\n      yPadding = label.yPadding;\n  var lineW = lineSize.w * space.dx;\n  var lineH = lineSize.h * space.dy;\n  var x = lineW > 0 && (labelSize.w / 2 + xPadding - space.x) / lineW;\n  var y = lineH > 0 && (labelSize.h / 2 + yPadding - space.y) / lineH;\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(line, chartArea) {\n  var x = line.x,\n      x2 = line.x2,\n      y = line.y,\n      y2 = line.y2;\n  var t = Math.min(y, y2) - chartArea.top;\n  var l = Math.min(x, x2) - chartArea.left;\n  var b = chartArea.bottom - Math.max(y, y2);\n  var r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l < r ? 1 : -1,\n    dy: t < b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  var size = labelSizes.size,\n      min = labelSizes.min,\n      max = labelSizes.max,\n      padding = labelSizes.padding;\n  var halfSize = size / 2;\n\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n\n  if (min >= coordinate - padding - halfSize) {\n    coordinate = min + padding + halfSize;\n  }\n\n  if (max <= coordinate + padding + halfSize) {\n    coordinate = max - padding - halfSize;\n  }\n\n  return coordinate;\n}\n\nvar EllipseAnnotation = /*#__PURE__*/function (_BoxAnnotation) {\n  _inherits(EllipseAnnotation, _BoxAnnotation);\n\n  var _super3 = _createSuper(EllipseAnnotation);\n\n  function EllipseAnnotation() {\n    _classCallCheck(this, EllipseAnnotation);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(EllipseAnnotation, [{\n    key: \"inRange\",\n    value: function inRange(x, y) {\n      return pointInEllipse({\n        x: x,\n        y: y\n      }, this);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var width = this.width,\n          height = this.height,\n          options = this.options;\n      var center = this.getCenterPoint();\n      ctx.save();\n      ctx.beginPath();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n      ctx.ellipse(center.x, center.y, height / 2, width / 2, Math.PI / 2, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }]);\n\n  return EllipseAnnotation;\n}(BoxAnnotation);\n\nEllipseAnnotation.id = 'ellipseAnnotation';\nEllipseAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction pointInEllipse(p, ellipse) {\n  var width = ellipse.width,\n      height = ellipse.height;\n  var center = ellipse.getCenterPoint(true);\n  var xRadius = width / 2;\n  var yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n\n  return Math.pow(p.x - center.x, 2) / Math.pow(xRadius, 2) + Math.pow(p.y - center.y, 2) / Math.pow(yRadius, 2) <= 1.0;\n}\n\nvar PointAnnotation = /*#__PURE__*/function (_Element3) {\n  _inherits(PointAnnotation, _Element3);\n\n  var _super4 = _createSuper(PointAnnotation);\n\n  function PointAnnotation() {\n    _classCallCheck(this, PointAnnotation);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(PointAnnotation, [{\n    key: \"inRange\",\n    value: function inRange(x, y) {\n      var width = this.width,\n          options = this.options;\n      var center = this.getCenterPoint(true);\n      var radius = width / 2 + options.borderWidth;\n\n      if (radius <= 0) {\n        return false;\n      }\n\n      return Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2) <= Math.pow(radius, 2);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var x = this.x,\n          y = this.y,\n          width = this.width,\n          options = this.options;\n      ctx.save();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n      ctx.beginPath();\n      ctx.arc(x, y, width / 2, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"resolveElementProperties\",\n    value: function resolveElementProperties(chart, options) {\n      var chartArea = chart.chartArea,\n          scales = chart.scales;\n      var xScale = scales[options.xScaleID];\n      var yScale = scales[options.yScaleID];\n      var x = chartArea.width / 2;\n      var y = chartArea.height / 2;\n\n      if (xScale) {\n        x = scaleValue(xScale, options.xValue, x);\n      }\n\n      if (yScale) {\n        y = scaleValue(yScale, options.yValue, y);\n      }\n\n      return {\n        x: x,\n        y: y,\n        width: options.radius * 2,\n        height: options.radius * 2\n      };\n    }\n  }]);\n\n  return PointAnnotation;\n}(Element);\n\nPointAnnotation.id = 'pointAnnotation';\nPointAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  radius: 10,\n  xScaleID: 'x',\n  xValue: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nvar version = \"1.0.2\";\nvar chartStates = new Map();\nvar annotationTypes = {\n  box: BoxAnnotation,\n  line: LineAnnotation,\n  ellipse: EllipseAnnotation,\n  point: PointAnnotation\n};\nObject.keys(annotationTypes).forEach(function (key) {\n  defaults.describe(\"elements.\".concat(annotationTypes[key].id), {\n    _fallback: 'plugins.annotation'\n  });\n});\nvar annotation = {\n  id: 'annotation',\n  version: version,\n  afterRegister: function afterRegister() {\n    Chart.register(annotationTypes);\n  },\n  afterUnregister: function afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n  beforeInit: function beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false\n    });\n  },\n  beforeUpdate: function beforeUpdate(chart, args, options) {\n    var state = chartStates.get(chart);\n    var annotations = state.annotations = [];\n    var annotationOptions = options.annotations;\n\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(function (key) {\n        var value = annotationOptions[key];\n\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push.apply(annotations, _toConsumableArray(annotationOptions));\n    }\n  },\n  afterDataLimits: function afterDataLimits(chart, args) {\n    var state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(function (a) {\n      return a.display && a.adjustScaleRange;\n    }));\n  },\n  afterUpdate: function afterUpdate(chart, args, options) {\n    var state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart) {\n    draw(chart, 'beforeDatasetsDraw');\n  },\n  afterDatasetsDraw: function afterDatasetsDraw(chart) {\n    draw(chart, 'afterDatasetsDraw');\n  },\n  beforeDraw: function beforeDraw(chart) {\n    draw(chart, 'beforeDraw');\n  },\n  afterDraw: function afterDraw(chart) {\n    draw(chart, 'afterDraw');\n  },\n  beforeEvent: function beforeEvent(chart, args, options) {\n    var state = chartStates.get(chart);\n    handleEvent(chart, state, args.event, options);\n  },\n  destroy: function destroy(chart) {\n    chartStates.delete(chart);\n  },\n  _getState: function _getState(chart) {\n    return chartStates.get(chart);\n  },\n  defaults: {\n    drawTime: 'afterDatasetsDraw',\n    dblClickSpeed: 350,\n    // ms\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n        type: 'number'\n      }\n    },\n    label: {\n      drawTime: null\n    }\n  },\n  descriptors: {\n    _indexable: false,\n    _scriptable: function _scriptable(prop) {\n      return !hooks.includes(prop);\n    },\n    annotations: {\n      _allKeys: false,\n      _fallback: function _fallback(prop, opts) {\n        return \"elements.\".concat(annotationTypes[opts.type || 'line'].id);\n      }\n    }\n  },\n  additionalOptionScopes: ['']\n};\nvar directUpdater = {\n  update: Object.assign\n};\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n\n  return new Animations(chart, animOpts);\n}\n\nfunction updateElements(chart, state, options, mode) {\n  var animations = resolveAnimations(chart, options.animations, mode);\n  var annotations = state.annotations;\n  var elements = resyncElements(state.elements, annotations);\n\n  for (var i = 0; i < annotations.length; i++) {\n    var _annotation = annotations[i];\n    var el = elements[i];\n    var elType = annotationTypes[_annotation.type] || annotationTypes.line;\n\n    if (!el || !(el instanceof elType)) {\n      el = elements[i] = new elType();\n    }\n\n    var opts = resolveAnnotationOptions(_annotation.setContext(getContext(chart, el, _annotation)));\n    var properties = el.resolveElementProperties(chart, opts);\n    properties.skip = isNaN(properties.x) || isNaN(properties.y);\n    properties.options = opts;\n    animations.update(el, properties);\n  }\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  var elType = annotationTypes[resolver.type] || annotationTypes.line;\n  var result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result, resolveObj(resolver, elType.defaults), resolveObj(resolver, elType.defaultRoutes));\n\n  var _iterator = _createForOfIteratorHelper(hooks),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var hook = _step.value;\n      result[hook] = resolver[hook];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  var result = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(defs); _i < _Object$keys.length; _i++) {\n    var name = _Object$keys[_i];\n    var optDefs = defs[name];\n    var value = resolver[name];\n    result[name] = isObject(optDefs) ? resolveObj(value, optDefs) : value;\n  }\n\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element: element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  var count = annotations.length;\n  var start = elements.length;\n\n  if (start < count) {\n    var add = count - start;\n    elements.splice.apply(elements, [start, 0].concat(_toConsumableArray(new Array(add))));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n\n  return elements;\n}\n\nfunction draw(chart, caller) {\n  var ctx = chart.ctx,\n      chartArea = chart.chartArea;\n  var state = chartStates.get(chart);\n  var elements = state.elements.filter(function (el) {\n    return !el.skip && el.options.display;\n  });\n  clipArea(ctx, chartArea);\n  elements.forEach(function (el) {\n    if (el.options.drawTime === caller) {\n      el.draw(ctx);\n    }\n  });\n  unclipArea(ctx);\n  elements.forEach(function (el) {\n    if ('drawLabel' in el && el.options.label && (el.options.label.drawTime || el.options.drawTime) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\n\nfunction adjustScaleRange(chart, scale, annotations) {\n  var range = getScaleLimits(scale, annotations);\n  var changed = false;\n\n  if (isFinite(range.min) && typeof scale.options.min === 'undefined' && typeof scale.options.suggestedMin === 'undefined') {\n    changed = scale.min !== range.min;\n    scale.min = range.min;\n  }\n\n  if (isFinite(range.max) && typeof scale.options.max === 'undefined' && typeof scale.options.suggestedMax === 'undefined') {\n    changed = scale.max !== range.max;\n    scale.max = range.max;\n  }\n\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\n\nfunction getScaleLimits(scale, annotations) {\n  var axis = scale.axis;\n  var scaleID = scale.id;\n  var scaleIDOption = axis + 'ScaleID';\n  var min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n  var max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n\n  var _iterator2 = _createForOfIteratorHelper(annotations),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _annotation2 = _step2.value;\n\n      if (_annotation2.scaleID === scaleID) {\n        for (var _i2 = 0, _arr = ['value', 'endValue']; _i2 < _arr.length; _i2++) {\n          var prop = _arr[_i2];\n          var raw = _annotation2[prop];\n\n          if (raw) {\n            var value = scale.parse(raw);\n            min = Math.min(min, value);\n            max = Math.max(max, value);\n          }\n        }\n      } else if (_annotation2[scaleIDOption] === scaleID) {\n        for (var _i3 = 0, _arr2 = [axis + 'Min', axis + 'Max', axis + 'Value']; _i3 < _arr2.length; _i3++) {\n          var _prop = _arr2[_i3];\n          var _raw = _annotation2[_prop];\n\n          if (_raw) {\n            var _value = scale.parse(_raw);\n\n            min = Math.min(min, _value);\n            max = Math.max(max, _value);\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nexport default annotation;","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"names":["Element","Chart","defaults","Animations","distanceBetweenPoints","callback","isFinite","toFontString","isArray","toRadians","isObject","clipArea","unclipArea","valueOrDefault","clickHooks","moveHooks","hooks","concat","updateListeners","chart","state","options","annotations","listened","moveListened","forEach","hook","listeners","scope","handleEvent","event","type","handleMoveEvents","handleClickEvents","element","getNearestItem","elements","previous","hovered","dispatchMoveEvents","dispatchEvent","leave","enter","elOpts","dblclick","click","clickTimeout","clearTimeout","setTimeout","dblClickSpeed","_state","handler","position","minDistance","Number","POSITIVE_INFINITY","filter","display","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","push","sort","a","b","_index","slice","PI$1","Math","PI","HALF_PI","scaleValue","scale","value","fallback","parse","getPixelForValue","roundedRect","ctx","width","height","radius","beginPath","r","min","left","top","right","bottom","moveTo","arc","closePath","rect","rotated","point","angle","cos","sin","cx","cy","BoxAnnotation","mouseX","mouseY","useFinalPosition","getProps","save","lineWidth","borderWidth","strokeStyle","borderColor","fillStyle","backgroundColor","setLineDash","borderDash","lineDashOffset","borderDashOffset","cornerRadius","fill","stroke","restore","xScale","scales","xScaleID","yScale","yScaleID","chartArea","y2","x2","max","xMin","xMax","yMin","yMax","id","adjustScaleRange","undefined","defaultRoutes","clamp","from","to","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","toPercent","s","endsWith","parseFloat","limitPointToArea","NaN","limitLineToArea","area","LineAnnotation","epsilon","sqr","v","x1","y1","dx","dy","lenSq","xx","yy","label","enabled","content","labelRect","labelIsVisible","rotation","w2","h2","intersects","isOnLabel","lineTo","drawLabel","scaleID","endValue","isHorizontal","drawTime","font","family","lineHeight","size","style","weight","color","xPadding","yPadding","xAdjust","yAdjust","textAlign","calculateAutoRotation","line","atan2","measureLabel","calculateLabelPosition","translate","rotate","calculateLabelXAlignment","textYPosition","i","length","textBaseline","fillText","Image","drawImage","getImageSize","widthCache","Map","lines","count","text","has","set","measureText","get","rotatedSize","calculateT","pt","xCoordinateSizes","w","padding","yCoordinateSizes","h","adjustLabelCoordinate","rotSize","space","spaceAround","calculateTAdjust","lineSize","labelSize","lineW","lineH","l","coordinate","labelSizes","halfSize","EllipseAnnotation","pointInEllipse","ellipse","p","xRadius","yRadius","pow","PointAnnotation","xValue","yValue","version","chartStates","annotationTypes","box","Object","keys","key","describe","_fallback","annotation","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","args","annotationOptions","afterDataLimits","afterUpdate","updateElements","mode","beforeDatasetsDraw","draw","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","destroy","delete","_getState","animations","numbers","properties","descriptors","_indexable","_scriptable","prop","includes","_allKeys","opts","additionalOptionScopes","directUpdater","update","assign","resolveAnimations","animOpts","resyncElements","el","elType","resolveAnnotationOptions","setContext","getContext","resolveElementProperties","skip","isNaN","resolver","result","resolveObj","defs","name","optDefs","$context","create","start","add","splice","Array","caller","range","getScaleLimits","changed","suggestedMin","suggestedMax","handleTickRangeOptions","axis","scaleIDOption","NEGATIVE_INFINITY","raw"],"mappings":"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","sourcesContent":["/*!\n* chartjs-plugin-annotation v1.0.2\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2021 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, Chart, defaults, Animations } from 'chart.js';\nimport { distanceBetweenPoints, callback, isFinite, toFontString, isArray, toRadians, isObject, clipArea, unclipArea, valueOrDefault } from 'chart.js/helpers';\n\nconst clickHooks = ['click', 'dblclick'];\nconst moveHooks = ['enter', 'leave'];\nconst hooks = clickHooks.concat(moveHooks);\n\nfunction updateListeners(chart, state, options) {\n  const annotations = state.annotations || [];\n  state.listened = false;\n  state.moveListened = false;\n\n  hooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    }\n  });\n  moveHooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    annotations.forEach(scope => {\n      if (!state.listened) {\n        clickHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction handleEvent(chart, state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      handleMoveEvents(chart, state, event);\n      break;\n    case 'click':\n      handleClickEvents(chart, state, event, options);\n      break;\n    }\n  }\n}\n\nfunction handleMoveEvents(chart, state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let element;\n\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n\n  const previous = state.hovered;\n  state.hovered = element;\n\n  dispatchMoveEvents(chart, state, previous, element);\n}\n\nfunction dispatchMoveEvents(chart, state, previous, element) {\n  if (previous && previous !== element) {\n    dispatchEvent(chart, state, previous.options.leave || state.listeners.leave, previous);\n  }\n  if (element && element !== previous) {\n    dispatchEvent(chart, state, element.options.enter || state.listeners.enter, element);\n  }\n}\n\nfunction handleClickEvents(chart, state, event, options) {\n  const listeners = state.listeners;\n  const element = getNearestItem(state.elements, event);\n  if (element) {\n    const elOpts = element.options;\n    const dblclick = elOpts.dblclick || listeners.dblclick;\n    const click = elOpts.click || listeners.click;\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(chart, state, dblclick, element);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(() => {\n        delete element.clickTimeout;\n        dispatchEvent(chart, state, click, element);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(chart, state, click, element);\n    }\n  }\n}\n\nfunction dispatchEvent(chart, _state, handler, element) {\n  callback(handler, [{chart, element}]);\n}\n\nfunction getNearestItem(elements, position) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return elements\n    .filter((element) => element.options.display && element.inRange(position.x, position.y))\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const distance = distanceBetweenPoints(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1)[0]; // return only the top item\n}\n\nconst PI$1 = Math.PI;\nconst HALF_PI = PI$1 / 2;\n\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n * given size (width, height) and the same `radius` for all corners.\n * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n * @param {number} width - The rectangle's width.\n * @param {number} height - The rectangle's height.\n * @param {number} radius - The rounded amount (in pixels) for the four corners.\n * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n */\nfunction roundedRect(ctx, x, y, width, height, radius) {\n  ctx.beginPath();\n  if (radius) {\n    const r = Math.min(radius, height / 2, width / 2);\n    const left = x + r;\n    const top = y + r;\n    const right = x + width - r;\n    const bottom = y + height - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -PI$1, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, PI$1);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, PI$1 + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -PI$1, 0);\n      ctx.arc(left, bottom, r, 0, PI$1);\n    } else {\n      ctx.arc(left, top, r, -PI$1, PI$1);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, width, height);\n  }\n}\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {{x: number, y: number}} point - the point to rotate\n * @param {{x: number, y: number}} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {{x: number, y: number}} rotated point\n */\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nclass BoxAnnotation extends Element {\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n\n    return mouseX >= x &&\n\t\t\tmouseX <= x + width &&\n\t\t\tmouseY >= y &&\n\t\t\tmouseY <= y + height;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, width, height, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    roundedRect(ctx, x, y, width, height, options.cornerRadius);\n    ctx.fill();\n\n    // If no border, don't draw it\n    if (options.borderWidth) {\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const xScale = chart.scales[options.xScaleID];\n    const yScale = chart.scales[options.yScaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (!xScale && !yScale) {\n      return {options: {}};\n    }\n\n    if (xScale) {\n      min = scaleValue(xScale, options.xMin, x);\n      max = scaleValue(xScale, options.xMax, x2);\n      x = Math.min(min, max);\n      x2 = Math.max(min, max);\n    }\n\n    if (yScale) {\n      min = scaleValue(yScale, options.yMin, y2);\n      max = scaleValue(yScale, options.yMax, y);\n      y = Math.min(min, max);\n      y2 = Math.max(min, max);\n    }\n\n    return {\n      x,\n      y,\n      x2,\n      y2,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  cornerRadius: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nconst PI = Math.PI;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst toPercent = (s) => typeof s === 'string' && s.endsWith('%') && parseFloat(s) / 100;\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = p2.x < left ? NaN : interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = p2.x > right ? NaN : interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = p2.y < top ? NaN : interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = p2.y > bottom ? NaN : interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nclass LineAnnotation extends Element {\n  intersects(x, y, epsilon = 0.001) {\n    // Adapted from https://stackoverflow.com/a/6853926/25507\n    const sqr = v => v * v;\n    const {x: x1, y: y1, x2, y2} = this;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const lenSq = sqr(dx) + sqr(dy);\n    const t = lenSq === 0 ? -1 : ((x - x1) * dx + (y - y1) * dy) / lenSq;\n    let xx, yy;\n    if (t < 0) {\n      xx = x1;\n      yy = y1;\n    } else if (t > 1) {\n      xx = x2;\n      yy = y2;\n    } else {\n      xx = x1 + t * dx;\n      yy = y1 + t * dy;\n    }\n    return (sqr(x - xx) + sqr(y - yy)) < epsilon;\n  }\n\n  labelIsVisible() {\n    const label = this.options.label;\n    return label && label.enabled && label.content;\n  }\n\n  isOnLabel(mouseX, mouseY) {\n    const {labelRect} = this;\n    if (!labelRect || !this.labelIsVisible()) {\n      return false;\n    }\n\n    const {x, y} = rotated({x: mouseX, y: mouseY}, labelRect, -labelRect.rotation);\n    const w2 = labelRect.width / 2;\n    const h2 = labelRect.height / 2;\n    return x >= labelRect.x - w2 && x <= labelRect.x + w2 &&\n      y >= labelRect.y - h2 && y <= labelRect.y + h2;\n  }\n\n  inRange(x, y) {\n    const epsilon = this.options.borderWidth || 1;\n    return this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n  }\n\n  getCenterPoint() {\n    return {\n      x: (this.x2 + this.x) / 2,\n      y: (this.y2 + this.y) / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, options} = this;\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    // Draw\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  drawLabel(ctx, chartArea) {\n    if (this.labelIsVisible()) {\n      ctx.save();\n      drawLabel(ctx, this, chartArea);\n      ctx.restore();\n    }\n  }\n\n  resolveElementProperties(chart, options) {\n    const scale = chart.scales[options.scaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (scale) {\n      min = scaleValue(scale, options.value, NaN);\n      max = scaleValue(scale, options.endValue, min);\n      if (scale.isHorizontal()) {\n        x = min;\n        x2 = max;\n      } else {\n        y = min;\n        y2 = max;\n      }\n    } else {\n      const xScale = chart.scales[options.xScaleID];\n      const yScale = chart.scales[options.yScaleID];\n\n      if (xScale) {\n        x = scaleValue(xScale, options.xMin, x);\n        x2 = scaleValue(xScale, options.xMax, x2);\n      }\n\n      if (yScale) {\n        y = scaleValue(yScale, options.yMin, y);\n        y2 = scaleValue(yScale, options.yMax, y2);\n      }\n    }\n    return limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea);\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderWidth: 2,\n  borderDash: [],\n  borderDashOffset: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: 'bold',\n      weight: undefined\n    },\n    color: '#fff',\n    xPadding: 6,\n    yPadding: 6,\n    rotation: 0,\n    cornerRadius: 6,\n    position: 'center',\n    xAdjust: 0,\n    yAdjust: 0,\n    textAlign: 'center',\n    enabled: false,\n    content: null\n  },\n  value: undefined,\n  endValue: undefined,\n  scaleID: undefined,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction calculateAutoRotation(line) {\n  const {x, y, x2, y2} = line;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction drawLabel(ctx, line, chartArea) {\n  const label = line.options.label;\n\n  ctx.font = toFontString(label.font);\n\n  const {width, height} = measureLabel(ctx, label);\n  const rect = line.labelRect = calculateLabelPosition(line, width, height, chartArea);\n\n  ctx.translate(rect.x, rect.y);\n  ctx.rotate(rect.rotation);\n\n  ctx.fillStyle = label.backgroundColor;\n  roundedRect(ctx, -(width / 2), -(height / 2), width, height, label.cornerRadius);\n  ctx.fill();\n\n  ctx.fillStyle = label.color;\n  if (isArray(label.content)) {\n    ctx.textAlign = label.textAlign;\n    const x = calculateLabelXAlignment(label, width);\n    let textYPosition = -(height / 2) + label.yPadding;\n    for (let i = 0; i < label.content.length; i++) {\n      ctx.textBaseline = 'top';\n      ctx.fillText(\n        label.content[i],\n        x,\n        textYPosition\n      );\n      textYPosition += label.font.size + label.yPadding;\n    }\n  } else if (label.content instanceof Image) {\n    const x = -(width / 2) + label.xPadding;\n    const y = -(height / 2) + label.yPadding;\n    ctx.drawImage(label.content, x, y, width - (2 * label.xPadding), height - (2 * label.yPadding));\n  } else {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(label.content, 0, 0);\n  }\n}\n\nfunction calculateLabelXAlignment(label, width) {\n  const {textAlign, xPadding} = label;\n  if (textAlign === 'start') {\n    return -(width / 2) + xPadding;\n  } else if (textAlign === 'end') {\n    return +(width / 2) - xPadding;\n  }\n  return 0;\n}\n\nfunction getImageSize(size, value) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return toPercent(value) * size;\n  }\n  return size;\n}\n\nconst widthCache = new Map();\nfunction measureLabel(ctx, label) {\n  const content = label.content;\n  if (content instanceof Image) {\n    return {\n      width: getImageSize(content.width, label.width) + 2 * label.xPadding,\n      height: getImageSize(content.height, label.height) + 2 * label.yPadding\n    };\n  }\n  const lines = isArray(content) ? content : [content];\n  const count = lines.length;\n  let width = 0;\n  for (let i = 0; i < count; i++) {\n    const text = lines[i];\n    if (!widthCache.has(text)) {\n      widthCache.set(text, ctx.measureText(text).width);\n    }\n    width = Math.max(width, widthCache.get(text));\n  }\n  width += 2 * label.xPadding;\n\n  return {\n    width,\n    height: count * label.font.size + ((count + 1) * label.yPadding)\n  };\n}\n\nfunction calculateLabelPosition(line, width, height, chartArea) {\n  const label = line.options.label;\n  const {xAdjust, yAdjust, xPadding, yPadding, position} = label;\n  const p1 = {x: line.x, y: line.y};\n  const p2 = {x: line.x2, y: line.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(line, position, size, chartArea);\n  const pt = pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: xPadding};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: yPadding};\n\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width,\n    height,\n    rotation\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(line, position, rotSize, chartArea) {\n  let t = 0.5;\n  const space = spaceAround(line, chartArea);\n  const label = line.options.label;\n  if (position === 'start') {\n    t = calculateTAdjust({w: line.x2 - line.x, h: line.y2 - line.y}, rotSize, label, space);\n  } else if (position === 'end') {\n    t = 1 - calculateTAdjust({w: line.x - line.x2, h: line.y - line.y2}, rotSize, label, space);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, labelSize, label, space) {\n  const {xPadding, yPadding} = label;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + xPadding - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + yPadding - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(line, chartArea) {\n  const {x, x2, y, y2} = line;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l < r ? 1 : -1,\n    dy: t < b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n\n  return coordinate;\n}\n\nclass EllipseAnnotation extends BoxAnnotation {\n\n  inRange(x, y) {\n    return pointInEllipse({x, y}, this);\n  }\n\n  draw(ctx) {\n    const {width, height, options} = this;\n    const center = this.getCenterPoint();\n\n    ctx.save();\n\n    ctx.beginPath();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.ellipse(center.x, center.y, height / 2, width / 2, Math.PI / 2, 0, 2 * Math.PI);\n\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction pointInEllipse(p, ellipse) {\n  const {width, height} = ellipse;\n  const center = ellipse.getCenterPoint(true);\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n\n  return (Math.pow(p.x - center.x, 2) / Math.pow(xRadius, 2)) + (Math.pow(p.y - center.y, 2) / Math.pow(yRadius, 2)) <= 1.0;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(x, y) {\n    const {width, options} = this;\n    const center = this.getCenterPoint(true);\n    const radius = width / 2 + options.borderWidth;\n\n    if (radius <= 0) {\n      return false;\n    }\n\n    return (Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2)) <= Math.pow(radius, 2);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  draw(ctx) {\n    const {x, y, width, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.beginPath();\n    ctx.arc(x, y, width / 2, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const {chartArea, scales} = chart;\n    const xScale = scales[options.xScaleID];\n    const yScale = scales[options.yScaleID];\n    let x = chartArea.width / 2;\n    let y = chartArea.height / 2;\n\n    if (xScale) {\n      x = scaleValue(xScale, options.xValue, x);\n    }\n\n    if (yScale) {\n      y = scaleValue(yScale, options.yValue, y);\n    }\n\n    return {\n      x,\n      y,\n      width: options.radius * 2,\n      height: options.radius * 2\n    };\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  radius: 10,\n  xScaleID: 'x',\n  xValue: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nvar version = \"1.0.2\";\n\nconst chartStates = new Map();\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  line: LineAnnotation,\n  ellipse: EllipseAnnotation,\n  point: PointAnnotation\n};\n\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation'\n  });\n});\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n  },\n\n  beforeDatasetsDraw(chart) {\n    draw(chart, 'beforeDatasetsDraw');\n  },\n\n  afterDatasetsDraw(chart) {\n    draw(chart, 'afterDatasetsDraw');\n  },\n\n  beforeDraw(chart) {\n    draw(chart, 'beforeDraw');\n  },\n\n  afterDraw(chart) {\n    draw(chart, 'afterDraw');\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    handleEvent(chart, state, args.event, options);\n  },\n\n  destroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    drawTime: 'afterDatasetsDraw',\n    dblClickSpeed: 350, // ms\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n        type: 'number'\n      },\n    },\n    label: {\n      drawTime: null\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop),\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[opts.type || 'line'].id}`,\n    },\n  },\n\n  additionalOptionScopes: ['']\n};\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotation = annotations[i];\n    let el = elements[i];\n    const elType = annotationTypes[annotation.type] || annotationTypes.line;\n    if (!el || !(el instanceof elType)) {\n      el = elements[i] = new elType();\n    }\n    const opts = resolveAnnotationOptions(annotation.setContext(getContext(chart, el, annotation)));\n    const properties = el.resolveElementProperties(chart, opts);\n    properties.skip = isNaN(properties.x) || isNaN(properties.y);\n    properties.options = opts;\n    animations.update(el, properties);\n  }\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elType = annotationTypes[resolver.type] || annotationTypes.line;\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result, resolveObj(resolver, elType.defaults), resolveObj(resolver, elType.defaultRoutes));\n  for (const hook of hooks) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const name of Object.keys(defs)) {\n    const optDefs = defs[name];\n    const value = resolver[name];\n    result[name] = isObject(optDefs) ? resolveObj(value, optDefs) : value;\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nfunction draw(chart, caller) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n  const elements = state.elements.filter(el => !el.skip && el.options.display);\n\n  clipArea(ctx, chartArea);\n  elements.forEach(el => {\n    if (el.options.drawTime === caller) {\n      el.draw(ctx);\n    }\n  });\n  unclipArea(ctx);\n\n  elements.forEach(el => {\n    if ('drawLabel' in el && el.options.label && (el.options.label.drawTime || el.options.drawTime) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\n\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(scale, annotations);\n  let changed = false;\n  if (isFinite(range.min) &&\n\t\ttypeof scale.options.min === 'undefined' &&\n\t\ttypeof scale.options.suggestedMin === 'undefined') {\n    changed = scale.min !== range.min;\n    scale.min = range.min;\n  }\n  if (isFinite(range.max) &&\n\t\ttypeof scale.options.max === 'undefined' &&\n\t\ttypeof scale.options.suggestedMax === 'undefined') {\n    changed = scale.max !== range.max;\n    scale.max = range.max;\n  }\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\n\nfunction getScaleLimits(scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  let min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n  let max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      for (const prop of ['value', 'endValue']) {\n        const raw = annotation[prop];\n        if (raw) {\n          const value = scale.parse(raw);\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n    } else if (annotation[scaleIDOption] === scaleID) {\n      for (const prop of [axis + 'Min', axis + 'Max', axis + 'Value']) {\n        const raw = annotation[prop];\n        if (raw) {\n          const value = scale.parse(raw);\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n    }\n  }\n  return {min, max};\n}\n\nexport default annotation;\n"]},"metadata":{},"sourceType":"module"}