{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-calc\\\\src\\\\Component\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useForm, useFieldArray, Controller, useWatch } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  quoteSummary\n}) => {\n  _s();\n\n  var _ref, _quoteSummary$incomeS, _ref2, _quoteSummary$balance, _quoteSummary$incomeS2, _quoteSummary$incomeS3, _quoteSummary$incomeS4, _quoteSummary$incomeS5;\n\n  const [growth, setGrowth] = useState(0);\n  const [npm, setNpm] = useState(0);\n  const [totalShares, setTotalShares] = useState(0);\n  const incomeStatementHistory = quoteSummary ? (_ref = [...(quoteSummary === null || quoteSummary === void 0 ? void 0 : (_quoteSummary$incomeS = quoteSummary.incomeStatementHistory) === null || _quoteSummary$incomeS === void 0 ? void 0 : _quoteSummary$incomeS.incomeStatementHistory)]) === null || _ref === void 0 ? void 0 : _ref.reverse() : [];\n  const balanceSheetStatements = quoteSummary ? (_ref2 = [...(quoteSummary === null || quoteSummary === void 0 ? void 0 : (_quoteSummary$balance = quoteSummary.balanceSheetHistory) === null || _quoteSummary$balance === void 0 ? void 0 : _quoteSummary$balance.balanceSheetStatements)]) === null || _ref2 === void 0 ? void 0 : _ref2.reverse() : [];\n  const revenue = (quoteSummary === null || quoteSummary === void 0 ? void 0 : (_quoteSummary$incomeS2 = quoteSummary.incomeStatementHistory) === null || _quoteSummary$incomeS2 === void 0 ? void 0 : (_quoteSummary$incomeS3 = _quoteSummary$incomeS2.incomeStatementHistory[0]) === null || _quoteSummary$incomeS3 === void 0 ? void 0 : _quoteSummary$incomeS3.totalRevenue.raw) + (quoteSummary === null || quoteSummary === void 0 ? void 0 : (_quoteSummary$incomeS4 = quoteSummary.incomeStatementHistory) === null || _quoteSummary$incomeS4 === void 0 ? void 0 : (_quoteSummary$incomeS5 = _quoteSummary$incomeS4.incomeStatementHistory[0]) === null || _quoteSummary$incomeS5 === void 0 ? void 0 : _quoteSummary$incomeS5.totalRevenue.raw) * (growth / 100);\n  const styles = {\n    tableHeader: {\n      backgroundColor: \"rgba(227, 242, 253, 1)\"\n    }\n  };\n\n  const formatNumber = data => {\n    return (Math.round(data / 1000000 * 100) / 100).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const setAppendrevenueEl = () => {};\n\n  console.log(\"fields\", fields);\n\n  const displayTable2 = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        append({\n          revenueEl: 0,\n          growthRevEl: 0,\n          pNpmEl: 0,\n          npmEl: 0,\n          totalSharesEl: 0,\n          epsEl: 0\n        });\n      },\n      children: \"append\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"text-center\",\n        style: styles.tableHeader,\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(item.endDate.raw * 1000).getFullYear()\n            }, item.endDate.raw, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this);\n          }) : \"-\", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date().getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date().getFullYear() + index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: formatNumber(item.totalRevenue.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this);\n          }) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: formatNumber(revenue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: item.revenueEl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E32\\u0E23\\u0E40\\u0E15\\u0E34\\u0E1A\\u0E42\\u0E15\\u0E02\\u0E2D\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map((item, index) => {\n            let revGrowth;\n\n            if (index !== 0) {\n              var _incomeStatementHisto;\n\n              revGrowth = `\n                        ${Math.round(((item === null || item === void 0 ? void 0 : item.totalRevenue.raw) / ((_incomeStatementHisto = incomeStatementHistory[index - 1]) === null || _incomeStatementHisto === void 0 ? void 0 : _incomeStatementHisto.totalRevenue.raw) - 1) * 100 * 100) / 100}`;\n            } else {\n              revGrowth = \"-\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: revGrowth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 26\n            }, this);\n          }) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100px\"\n              },\n              type: \"number\",\n              value: growth,\n              onChange: ev => setGrowth(ev.target.value),\n              className: \"text-center form-control m-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: \"100px\"\n                },\n                type: \"number\",\n                ...register(`predict.${index}.growthRevEl`),\n                className: \"text-center form-control m-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E2D\\u0E31\\u0E15\\u0E23\\u0E32\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: Math.round(item.netIncome.raw / item.totalRevenue.raw * 100 * 100) / 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this);\n          }) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100px\"\n              },\n              type: \"number\",\n              value: npm,\n              onChange: ev => setNpm(ev.target.value),\n              className: \"text-center form-control m-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: \"100px\"\n                },\n                type: \"number\",\n                ...register(`predict.${index}.pNpmEl`),\n                className: \"text-center form-control m-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: formatNumber(item.netIncome.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this);\n          }) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: revenue && npm ? formatNumber(revenue * (npm / 100)) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                readOnly: true,\n                style: {\n                  width: \"100px\"\n                },\n                type: \"number\",\n                ...register(`predict.${index}.npmEl`),\n                className: \"text-center form-control m-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E14\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19 (\\u0E25\\u0E49\\u0E32\\u0E19\\u0E2B\\u0E38\\u0E49\\u0E19)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: formatNumber(balanceSheetStatements[index].commonStock.raw)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this);\n          }) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100px\"\n              },\n              type: \"number\",\n              value: totalShares,\n              onChange: ev => setTotalShares(ev.target.value),\n              className: \"text-center form-control m-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                style: {\n                  width: \"100px\"\n                },\n                type: \"number\",\n                ...register(`predict.${index}.pNpmEl`),\n                className: \"text-center form-control m-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E15\\u0E48\\u0E2D\\u0E2B\\u0E38\\u0E49\\u0E19 (\\u0E1A\\u0E32\\u0E17)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), quoteSummary ? incomeStatementHistory.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: (+item.netIncome.raw / +balanceSheetStatements[index].commonStock.raw).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this);\n          }) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: revenue && totalShares ? (revenue * (npm / 100) / (totalShares * 1000000)).toFixed(2) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), fields.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                readOnly: true,\n                style: {\n                  width: \"100px\"\n                },\n                type: \"number\",\n                ...register(`predict.${index}.epsEl`),\n                className: \"text-center form-control m-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quoteSummary ? displayTable2 : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Table, \"I11W5Wr84HF/8vfxfsCEPp9ITQ4=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/src/Component/Table.js"],"names":["React","useState","useForm","useFieldArray","Controller","useWatch","Table","quoteSummary","growth","setGrowth","npm","setNpm","totalShares","setTotalShares","incomeStatementHistory","reverse","balanceSheetStatements","balanceSheetHistory","revenue","totalRevenue","raw","styles","tableHeader","backgroundColor","formatNumber","data","Math","round","toString","replace","setAppendrevenueEl","console","log","fields","displayTable2","append","revenueEl","growthRevEl","pNpmEl","npmEl","totalSharesEl","epsEl","map","item","Date","endDate","getFullYear","index","revGrowth","width","ev","target","value","register","netIncome","commonStock","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm, useFieldArray, Controller, useWatch } from \"react-hook-form\";\r\n\r\nconst Table = ({ quoteSummary }) => {\r\n  const [growth, setGrowth] = useState(0);\r\n  const [npm, setNpm] = useState(0);\r\n  const [totalShares, setTotalShares] = useState(0);\r\n  const incomeStatementHistory = quoteSummary\r\n    ? [\r\n        ...quoteSummary?.incomeStatementHistory?.incomeStatementHistory,\r\n      ]?.reverse()\r\n    : [];\r\n\r\n  const balanceSheetStatements = quoteSummary\r\n    ? [...quoteSummary?.balanceSheetHistory?.balanceSheetStatements]?.reverse()\r\n    : [];\r\n\r\n  const revenue =\r\n    quoteSummary?.incomeStatementHistory?.incomeStatementHistory[0]\r\n      ?.totalRevenue.raw +\r\n    quoteSummary?.incomeStatementHistory?.incomeStatementHistory[0]\r\n      ?.totalRevenue.raw *\r\n      (growth / 100);\r\n\r\n  const styles = {\r\n    tableHeader: {\r\n      backgroundColor: \"rgba(227, 242, 253, 1)\",\r\n    },\r\n  };\r\n\r\n  const formatNumber = (data) => {\r\n    return (Math.round((data / 1000000) * 100) / 100)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  const setAppendrevenueEl = () => {};\r\n\r\n  console.log(\"fields\", fields);\r\n\r\n  const displayTable2 = (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          append({\r\n            revenueEl: 0,\r\n            growthRevEl: 0,\r\n            pNpmEl: 0,\r\n            npmEl: 0,\r\n            totalSharesEl: 0,\r\n            epsEl: 0,\r\n          });\r\n        }}\r\n      >\r\n        append\r\n      </button>\r\n      <table className=\"table \">\r\n        <thead className=\"text-center\" style={styles.tableHeader}>\r\n          <tr>\r\n            <td></td>\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item) => {\r\n                  return (\r\n                    <td key={item.endDate.raw}>\r\n                      {new Date(item.endDate.raw * 1000).getFullYear()}\r\n                    </td>\r\n                  );\r\n                })\r\n              : \"-\"}\r\n            <td>{new Date().getFullYear()}</td>\r\n            {fields.map((item, index) => {\r\n              return <td>{new Date().getFullYear() + index}</td>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>รายได้ (ลบ.)</td>\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item) => {\r\n                  return (\r\n                    <td className=\"text-center\">\r\n                      {formatNumber(item.totalRevenue.raw)}\r\n                    </td>\r\n                  );\r\n                })\r\n              : \"\"}\r\n            <td className=\"text-center\">{formatNumber(revenue)}</td>\r\n            {fields.map((item, index) => {\r\n              return <td className=\"text-center\">{item.revenueEl}</td>;\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>การเติบโตของรายได้ (%)</td>\r\n\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item, index) => {\r\n                  let revGrowth;\r\n                  if (index !== 0) {\r\n                    revGrowth = `\r\n                        ${\r\n                          Math.round(\r\n                            (item?.totalRevenue.raw /\r\n                              incomeStatementHistory[index - 1]?.totalRevenue\r\n                                .raw -\r\n                              1) *\r\n                              100 *\r\n                              100\r\n                          ) / 100\r\n                        }`;\r\n                  } else {\r\n                    revGrowth = \"-\";\r\n                  }\r\n\r\n                  return <td className=\"text-center\">{revGrowth}</td>;\r\n                })\r\n              : \"\"}\r\n            <td className=\"text-center\">\r\n              <input\r\n                style={{ width: \"100px\" }}\r\n                type=\"number\"\r\n                value={growth}\r\n                onChange={(ev) => setGrowth(ev.target.value)}\r\n                className=\"text-center form-control m-auto\"\r\n              />\r\n            </td>\r\n            {fields.map((item, index) => {\r\n              return (\r\n                <td className=\"text-center\">\r\n                  <input\r\n                    style={{ width: \"100px\" }}\r\n                    type=\"number\"\r\n                    {...register(`predict.${index}.growthRevEl`)}\r\n                    className=\"text-center form-control m-auto\"\r\n                  />\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>อัตรากำไรสุทธิ (%)</td>\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item) => {\r\n                  return (\r\n                    <td className=\"text-center\">\r\n                      {Math.round(\r\n                        (item.netIncome.raw / item.totalRevenue.raw) * 100 * 100\r\n                      ) / 100}\r\n                    </td>\r\n                  );\r\n                })\r\n              : \"\"}\r\n            <td className=\"text-center\">\r\n              <input\r\n                style={{ width: \"100px\" }}\r\n                type=\"number\"\r\n                value={npm}\r\n                onChange={(ev) => setNpm(ev.target.value)}\r\n                className=\"text-center form-control m-auto\"\r\n              />\r\n            </td>\r\n            {fields.map((item, index) => {\r\n              return (\r\n                <td className=\"text-center\">\r\n                  <input\r\n                    style={{ width: \"100px\" }}\r\n                    type=\"number\"\r\n                    {...register(`predict.${index}.pNpmEl`)}\r\n                    className=\"text-center form-control m-auto\"\r\n                  />\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>กำไรสุทธิ (ลบ.)</td>\r\n\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item) => {\r\n                  return (\r\n                    <td className=\"text-center\">\r\n                      {formatNumber(item.netIncome.raw)}\r\n                    </td>\r\n                  );\r\n                })\r\n              : \"\"}\r\n            <td className=\"text-center\">\r\n              {revenue && npm ? formatNumber(revenue * (npm / 100)) : \"\"}\r\n            </td>\r\n            {fields.map((item, index) => {\r\n              return (\r\n                <td className=\"text-center\">\r\n                  <input\r\n                    readOnly\r\n                    style={{ width: \"100px\" }}\r\n                    type=\"number\"\r\n                    {...register(`predict.${index}.npmEl`)}\r\n                    className=\"text-center form-control m-auto\"\r\n                  />\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>จำนวนหุ้นที่จดทะเบียน (ล้านหุ้น)</td>\r\n\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item, index) => {\r\n                  return (\r\n                    <td className=\"text-center\">\r\n                      {formatNumber(\r\n                        balanceSheetStatements[index].commonStock.raw\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })\r\n              : \"\"}\r\n            <td className=\"text-center\">\r\n              <input\r\n                style={{ width: \"100px\" }}\r\n                type=\"number\"\r\n                value={totalShares}\r\n                onChange={(ev) => setTotalShares(ev.target.value)}\r\n                className=\"text-center form-control m-auto\"\r\n              />\r\n            </td>\r\n            {fields.map((item, index) => {\r\n              return (\r\n                <td className=\"text-center\">\r\n                  <input\r\n                    style={{ width: \"100px\" }}\r\n                    type=\"number\"\r\n                    {...register(`predict.${index}.pNpmEl`)}\r\n                    className=\"text-center form-control m-auto\"\r\n                  />\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n          <tr>\r\n            <td>กำไรต่อหุ้น (บาท)</td>\r\n\r\n            {quoteSummary\r\n              ? incomeStatementHistory.map((item, index) => {\r\n                  return (\r\n                    <td className=\"text-center\">\r\n                      {(\r\n                        +item.netIncome.raw /\r\n                        +balanceSheetStatements[index].commonStock.raw\r\n                      ).toFixed(2)}\r\n                    </td>\r\n                  );\r\n                })\r\n              : \"\"}\r\n            <td className=\"text-center\">\r\n              {revenue && totalShares\r\n                ? ((revenue * (npm / 100)) / (totalShares * 1000000)).toFixed(2)\r\n                : \"\"}\r\n            </td>\r\n            {fields.map((item, index) => {\r\n              return (\r\n                <td className=\"text-center\">\r\n                  <input\r\n                    readOnly\r\n                    style={{ width: \"100px\" }}\r\n                    type=\"number\"\r\n                    {...register(`predict.${index}.epsEl`)}\r\n                    className=\"text-center form-control m-auto\"\r\n                  />\r\n                </td>\r\n              );\r\n            })}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  return <div>{quoteSummary ? displayTable2 : \"\"}</div>;\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}