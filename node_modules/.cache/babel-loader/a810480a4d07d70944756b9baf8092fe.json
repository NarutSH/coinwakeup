{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narut\\\\Documents\\\\Coding\\\\stock-calc\\\\src\\\\Component\\\\Table.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  quoteSummary\n}) => {\n  const formatNumber = data => {\n    return Math.round(data / 1000000 * 100) / 100;\n  };\n\n  const displayTable = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: formatNumber(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.quoteSummary.result[0].financialData.totalRevenue.raw)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E01\\u0E32\\u0E23\\u0E40\\u0E15\\u0E34\\u0E1A\\u0E42\\u0E15\\u0E02\\u0E2D\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.quoteSummary.result[0].financialData.revenueGrowth.raw) * 100, \" \", \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E2D\\u0E31\\u0E15\\u0E23\\u0E32\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [(quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.quoteSummary.result[0].financialData.profitMargins.raw) * 100, \" \", \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: formatNumber((quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.quoteSummary.result[0].financialData.profitMargins.raw) * (quoteSummary === null || quoteSummary === void 0 ? void 0 : quoteSummary.quoteSummary.result[0].financialData.totalRevenue.raw))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0E01\\u0E33\\u0E44\\u0E23\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 (\\u0E25\\u0E1A.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayTable\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/narut/Documents/Coding/stock-calc/src/Component/Table.js"],"names":["React","Table","quoteSummary","formatNumber","data","Math","round","displayTable","result","financialData","totalRevenue","raw","revenueGrowth","profitMargins"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAClC,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,WAAOC,IAAI,CAACC,KAAL,CAAYF,IAAI,GAAG,OAAR,GAAmB,GAA9B,IAAqC,GAA5C;AACD,GAFD;;AAIA,QAAMG,YAAY,gBAChB;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBACGJ,YAAY,CACXD,YADW,aACXA,YADW,uBACXA,YAAY,CAAEA,YAAd,CAA2BM,MAA3B,CAAkC,CAAlC,EAAqCC,aAArC,CAAmDC,YAAnD,CACGC,GAFQ;AADf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uBACG,CAAAT,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEA,YAAd,CAA2BM,MAA3B,CAAkC,CAAlC,EAAqCC,aAArC,CAAmDG,aAAnD,CACED,GADF,IACQ,GAFX,EAEgB,GAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAkBE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uBACG,CAAAT,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEA,YAAd,CAA2BM,MAA3B,CAAkC,CAAlC,EAAqCC,aAArC,CAAmDI,aAAnD,CACEF,GADF,IACQ,GAFX,EAEgB,GAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eA0BE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBACGR,YAAY,CACX,CAAAD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEA,YAAd,CAA2BM,MAA3B,CAAkC,CAAlC,EAAqCC,aAArC,CAAmDI,aAAnD,CACGF,GADH,KAEET,YAFF,aAEEA,YAFF,uBAEEA,YAAY,CAAEA,YAAd,CAA2BM,MAA3B,CAAkC,CAAlC,EAAqCC,aAArC,CACGC,YADH,CACgBC,GAHlB,CADW;AADf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAqCE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;;AAuDA,sBAAO;AAAA,cAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7DD;;KAAMN,K;AA+DN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Table = ({ quoteSummary }) => {\r\n  const formatNumber = (data) => {\r\n    return Math.round((data / 1000000) * 100) / 100;\r\n  };\r\n\r\n  const displayTable = (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>2020</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th>รายได้ (ลบ.)</th>\r\n            <th>\r\n              {formatNumber(\r\n                quoteSummary?.quoteSummary.result[0].financialData.totalRevenue\r\n                  .raw\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>การเติบโตของรายได้</th>\r\n            <th>\r\n              {quoteSummary?.quoteSummary.result[0].financialData.revenueGrowth\r\n                .raw * 100}{\" \"}\r\n              %\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>อัตรากำไรสุทธิ</th>\r\n            <th>\r\n              {quoteSummary?.quoteSummary.result[0].financialData.profitMargins\r\n                .raw * 100}{\" \"}\r\n              %\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>กำไรสุทธิ (ลบ.)</th>\r\n            <th>\r\n              {formatNumber(\r\n                quoteSummary?.quoteSummary.result[0].financialData.profitMargins\r\n                  .raw *\r\n                  quoteSummary?.quoteSummary.result[0].financialData\r\n                    .totalRevenue.raw\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>กำไรสุทธิ (ลบ.)</th>\r\n            <th></th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  return <div>{displayTable}</div>;\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}